{
  "login": "select user_id, user_type, user_from, org_code, user_status, user_account, user_name, user_full_name, rop_user_id, linkman, tel, mobile, email from t_user where 1=1 and user_account=:?user_account and password=:?password",
  "subuserLogin": "select * from t_sub_user where user_id=:?user_id and user_account=:?user_account and password=:?password",
  "loginLog": "INSERT INTO t_login_log set user_id=:?user_id, login_time=now(), login_type=:?login_type, login_ip=:?login_ip, login_proxy_ip=:?login_proxy_ip, login_host_name=:?login_host_name, login_mac_address=:?login_mac_address, login_browser=:?login_browser, login_system=:?login_system, create_user_id=:?user_id, sub_user_id=:?sub_user_id, rx_insertTime=now()",
  "loginLogCount": "select count(*) as total from t_login_log as l left join t_user as u on l.user_id = u.user_id where  1=1 and l.login_time >= :?login_time_start and l.login_time <= :?login_time_end and u.user_name like :?user_name and u.user_type = :?user_type",
  "loginLogQuery": "select DATE_FORMAT(l.login_time, '%Y-%m-%d %H:%i:%s') as login_time, l.login_ip as login_ip, l.login_proxy_ip as login_proxy_ip, l.login_browser as login_browser, l.login_system as login_system, l.login_mac_address as login_mac_address, case ifnull(us.user_name,'') when '' then u.user_name else concat(u.user_name,':',us.user_name) end as user_name from t_login_log as l left join t_user as u on l.user_id = u.user_id left join t_sub_user as us on l.sub_user_id = us.sub_user_id where  1=1 and l.login_time >= :?login_time_start and l.login_time <= :?login_time_end and u.user_name like :?user_name and u.user_type = :?user_type order by login_time desc limit :?page_index,10",
  "operTableLogCount": "select count(*) as total from t_oper_table_log as o left join t_user as u on o.create_user_id = u.user_id where 1=1 and o.oper_time >= :?oper_time_start and o.oper_time <= :?oper_time_end and u.user_name like :?user_name and o.from_table like :?table_name",
  "operTableLogQuery": "select DATE_FORMAT(o.oper_time, '%Y-%m-%d %H:%i:%s') as oper_time, o.oper_id as oper_id, o.from_table as from_table, o.action_type as action_type, o.oper_log as oper_log, o.from_org_code as from_org_code, case ifnull(us.user_name,'') when '' then u.user_name else concat(u.user_name,':',us.user_name) end as user_name from t_oper_table_log as o left join t_user as u on o.create_user_id = u.user_id left join t_sub_user as us on o.sub_user_id = us.sub_user_id where  1=1 and o.oper_time >= :?oper_time_start and o.oper_time <= :?oper_time_end and u.user_name like :?user_name and o.from_table like :?table_name order by oper_time desc limit :?page_index,10",
  "dictionary": "select * from t_sys_para_info where 1=1 and table_name=:?table_name and col_name=:?col_name",
  "subUserDataFunc": "select * from t_sub_user_data_func where 1=1 and sub_user_id=:?sub_user_id and user_type=:?user_type",
  "userMenu":"select distinct * from (select c.func_id,c.f_func_id,c.func_name, c.func_img, c.func_level,c.func_path,c.page_id,c.sort_id from t_role_user a inner join t_role_func b on a.role_id=b.role_id inner join t_func c on b.func_id=c.func_id where a.user_id=:?user_id union all select c.func_id,c.f_func_id,c.func_name,c.func_img,c.func_level,c.func_path,c.page_id,c.sort_id from t_user_func a inner join t_func c on a.func_id=c.func_id where a.user_id=:?user_id) as t1 order by func_level,sort_id",
  "relatedOrgs": "select distinct a.asset_org_code, a.borrow_agreements_url, a.cooperative_agreements_url, a.due_diligence_url, a.fund_day_raise_fee, a.fund_org_code, a.fund_stock_fee, a.guarantee_url, a.interest_mode, a.is_check_stock, a.match_desc, a.other_agreements_url, a.priority, a.rx_insertTime, a.rx_updateTime, a.service_mode, a.stock_day_count, a.total_rate, b.user_from asset_user_from, c.user_from fund_user_from from t_asset_fund a inner join t_user b on b.org_code=a.asset_org_code inner join t_user c on c.org_code=a.fund_org_code where 1=1 and a.asset_org_code=:?org_code or a.fund_org_code=:?org_code",
  "orders": "select order_no, order_status, asset_org_code, asset_order_no, DATE_FORMAT(borrow_date, '%Y-%m-%d') as borrow_date, borrow_type, borrow_name, borrow_certificate_type, borrow_certificate_no, borrow_phone,borrow_mail, borrow_bank, borrow_card_type, borrow_card_no, borrow_area, borrow_work_address, borrow_family_address, borrow_census_address, borrow_pay_mode, borrow_purpose, format(borrow_fee/100,2) as borrow_fee, borrow_period, borrow_deadline, format(borrow_credit_fee/100,2) as borrow_credit_fee, borrow_credit_report, borrow_income_report, gathering_name, gathering_bank, gathering_card_no, fund_org_code, fund_order_no, refuse_type, refuse_reason, business_type,repayment_mode,bank_loan_contract_no,occupation,repayment_from,DATE_FORMAT(rx_insertTime, '%Y-%m-%d %H:%i:%s') as rx_insertTime, data_from,credit_org,credit_score,court_exec_count from t_order where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and rx_insertTime >= :?create_time_start and rx_insertTime <= :?create_time_end and borrow_daycount >= :?deadline_from and borrow_daycount <= :?deadline_to and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no = :?asset_order_no and borrow_certificate_no like :?borrow_certificate_no and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc limit :?page_index,10",
  "ordersCount": "select count(*) as total, format(sum(borrow_fee)/100,2) as fee from t_order where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and rx_insertTime >= :?create_time_start and rx_insertTime <= :?create_time_end and borrow_daycount >= :?deadline_from and borrow_daycount <= :?deadline_to and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no = :?asset_order_no and borrow_certificate_no like :?borrow_certificate_no and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction",
  "ordersForPublicity": "select * from t_order where 1=1 and asset_order_no = :?asset_order_no and order_no = :?order_no and borrow_name = :?borrow_name and borrow_certificate_no = :?borrow_certificate_no and borrow_phone = :?borrow_phone and borrow_card_no = :?borrow_card_no and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code order by order_no desc ",
  "ordersAssetExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号,u.user_name as 资产方机构名, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_certificate_type as 借款人证件类型, o.borrow_certificate_no as 借款人证件号, o.borrow_phone as 借款人银行预留手机号,o.borrow_mail as 借款人邮箱, o.borrow_bank as 借款人开户行, o.borrow_card_type as 借款人银行卡类型, o.borrow_card_no as 借款人银行卡号, o.borrow_area as 借款人所属地区, o.borrow_work_address as 借款人工作地址, o.borrow_family_address as 借款人家庭地址, o.borrow_census_address as 借款人户籍地址, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.borrow_credit_fee/100 as 借款人授信额度, o.borrow_credit_report as 借款人征信报告情况, o.borrow_income_report as 借款人收入情况, o.business_type as 业务类型, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.occupation as 借款人职业, o.repayment_from as 还款来源, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源, o.credit_org as 授信机构, o.credit_score as 授信评分,o.court_exec_count as 被法院执行总次数 from t_order as o left join t_user as u on o.asset_org_code = u.org_code where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and o.borrow_daycount >= :?deadline_from and o.borrow_daycount <= :?deadline_to and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no=:?asset_order_no and order_no = :?order_no and order_status in ::?order_status and borrow_certificate_no like :?borrow_certificate_no and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc ",
  "ordersFundExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_certificate_type as 借款人证件类型, o.borrow_certificate_no as 借款人证件号, o.borrow_phone as 借款人银行预留手机号, o.borrow_mail as 借款人邮箱,o.borrow_bank as 借款人开户行, o.borrow_card_type as 借款人银行卡类型, o.borrow_card_no as 借款人银行卡号, o.borrow_area as 借款人所属地区, o.borrow_work_address as 借款人工作地址, o.borrow_family_address as 借款人家庭地址, o.borrow_census_address as 借款人户籍地址, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.borrow_credit_fee/100 as 借款人授信额度, o.borrow_credit_report as 借款人征信报告情况, o.borrow_income_report as 借款人收入情况, o.business_type as 业务类型, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, u.user_name as 资金方机构名, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.occupation as 借款人职业, o.repayment_from as 还款来源, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源, o.credit_org as 授信机构, o.credit_score as 授信评分,o.court_exec_count as 被法院执行总次数 from t_order as o left join t_user as u on o.fund_org_code = u.org_code where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and o.borrow_daycount >= :?deadline_from and o.borrow_daycount <= :?deadline_to and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no=:?asset_order_no and order_no = :?order_no and order_status in ::?order_status and borrow_certificate_no like :?borrow_certificate_no and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc",
  "ordersAdminExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_certificate_type as 借款人证件类型, o.borrow_certificate_no as 借款人证件号, o.borrow_phone as 借款人银行预留手机号,o.borrow_mail as 借款人邮箱, o.borrow_bank as 借款人开户行, o.borrow_card_type as 借款人银行卡类型, o.borrow_card_no as 借款人银行卡号, o.borrow_area as 借款人所属地区, o.borrow_work_address as 借款人工作地址, o.borrow_family_address as 借款人家庭地址, o.borrow_census_address as 借款人户籍地址, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.borrow_credit_fee/100 as 借款人授信额度, o.borrow_credit_report as 借款人征信报告情况, o.borrow_income_report as 借款人收入情况, o.business_type as 业务类型, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.occupation as 借款人职业, o.repayment_from as 还款来源, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源, o.credit_org as 授信机构, o.credit_score as 授信评分,o.court_exec_count as 被法院执行总次数 from t_order as o where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and o.borrow_daycount >= :?deadline_from and o.borrow_daycount <= :?deadline_to and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and order_no = :?order_no and asset_order_no=:?asset_order_no and order_status in ::?order_status and borrow_certificate_no like :?borrow_certificate_no and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc",
  "userUpdate": "update t_user set user_name=:?user_name, tel=:!tel, mobile=:!mobile, email=:!email, password=:?password, linkman=:!linkman, rx_updateTime=now() where 1=1 and user_id=:?user_id and password=:?old_password",
  "subUserUpdate": "update t_sub_user set user_name=:?user_name, tel=:!tel, mobile=:!mobile, email=:!email, password=:?password, is_data_func=:?is_data_func, rx_updateTime=now() where 1=1 and sub_user_id=:?sub_user_id and password=:?old_password",
  "subUserRestrictionUpdate": "update t_sub_user set is_data_func=:?is_data_func, rx_updateTime=now() where 1=1 and sub_user_id=:?sub_user_id ",
  "userQuery": "select * from t_user where 1=1 and user_id=:?user_id",
  "userManageCreate": "INSERT INTO t_user set user_id = :?user_id, user_type=:?user_type, user_from=:?user_from, org_code=:?org_code, user_status=1, user_account=:?user_account, password=:?password, user_name=:?user_name, user_full_name=:?user_full_name, rop_user_id=:?rop_user_id, linkman=:?linkman, tel=:?tel, mobile=:?mobile, email=:?email, rx_insertTime=now(), rx_updateTime=now()",
  "userManageCount": "select count(*) as total from t_user where 1=1 and user_type=:?user_type and org_code=:?org_code and user_account like :?user_account and user_name like :?user_name",
  "userManageQuery": "select user_id, user_type, user_from, org_code, user_status, user_account, password, user_name, user_full_name, rop_user_id, linkman, tel, mobile, email, rx_insertTime, rx_updateTime from t_user where 1=1 and user_type=:?user_type and org_code=:?org_code and user_account like :?user_account and user_name like :?user_name order by user_type asc, org_code asc limit :?page_index,10",
  "userManagePreCount": "select count(*) as total from t_user where 1=1 and ( 1=2 or org_code=:?org_code or user_account=:?user_account or rop_user_id=:?rop_user_id )",
  "userManageUpdatePreCount": "select count(*) as total from t_user where 1=1 and user_id<>:?user_id and ( 1=2 or org_code=:?org_code or user_account=:?user_account or rop_user_id=:?rop_user_id )",
  "userManageUpdate": "update t_user set user_type=:?user_type, org_code=:?org_code, user_account=:?user_account, password=:?password, user_name=:?user_name, user_full_name=:?user_full_name, rop_user_id=:?rop_user_id, linkman=:!linkman, tel=:!tel, mobile=:!mobile, email=:!email, rx_updateTime=now() where 1=1 and user_id=:?user_id",
  "userManageDelete": "DELETE FROM t_user where 1=1 and user_id=:?user_id",
  "orderRepayment": "select order_no, DATE_FORMAT(repayment_date, '%Y-%m-%d') as repayment_date, repayment_card_no, repayment_bank, repayment_name, format(repayment_original_fee/100,2) as repayment_original_fee, format(repayment_interest_fee/100,2) as repayment_interest_fee, DATE_FORMAT(repayment_end_date, '%Y-%m-%d') as repayment_end_date from t_order_repayment where 1=1 and order_no=:?order_no",
  "orderPayment": "select order_no, DATE_FORMAT(payment_date, '%Y-%m-%d') as payment_date, format(payment_fee/100,2) as payment_fee, payment_channel, payment_serial_no,payment_certificate_url from t_order_payment where 1=1 and order_no=:?order_no",
  "orderAdvance": "select order_no, DATE_FORMAT(advance_date, '%Y-%m-%d') as advance_date, format(advance_fee/100,2) as advance_fee, advance_channel, advance_serial_no from t_order_advance where 1=1 and order_no=:?order_no",
  "orderCredit": "select * from t_order_credit where 1=1 and order_no=:?order_no",
  "enterpriseCreditCredit": "select * from t_enterprise_credit_credit where 1=1 and asset_org_code=:?asset_org_code and borrow_business_license=:?borrow_business_license",
  "orderVoucher": "select order_no, voucher_name, voucher_url from t_order_voucher where 1=1 and order_no=:?order_no",
  "filterOrderVoucher": "select v.voucher_name as voucher_name, v.voucher_url as voucher_url from t_order_voucher as v left join t_order as o on o.order_no = v.order_no where 1=1 and o.borrow_date >= :?borrow_date_start and o.borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and o.borrow_daycount >= :?deadline_from and o.borrow_daycount <= :?deadline_to and o.fund_org_code=:?fund_org_code and o.asset_org_code=:?asset_org_code and o.asset_order_no = :?asset_order_no and o.borrow_certificate_no like :?borrow_certificate_no and o.order_no = :?order_no and o.order_status in ::?order_status and o.asset_org_code in ::?asset_data_restriction and o.fund_org_code in ::?fund_data_restriction group by v.voucher_name,v.voucher_url",
  "orderContract": "select order_no, contract_type, contract_number, contract_url from t_order_contract where 1=1 and order_no=:?order_no",
  "orderService": "select order_no, DATE_FORMAT( service_date, '%Y-%m-%d' ) as service_date, format(service_fee/100, 2) as service_fee from t_order_service where 1=1 and order_no=:?order_no",
  "orderAccount": "select order_no, fund_org_code, fund_order_no, product_rate, format(account_fee/100,2) as account_fee, DATE_FORMAT(account_date, '%Y-%m-%d') as account_date, real_gathering_name,real_gathering_bank,real_gathering_card_no,repayment_card_no,repayment_bank,repayment_name from t_order_account where 1=1 and order_no=:?order_no",
  "corpOrders": "select order_no, order_status, asset_org_code, asset_order_no, DATE_FORMAT( borrow_date, '%Y-%m-%d' ) AS borrow_date, borrow_type, borrow_name, borrow_business_license, borrow_purpose, format( borrow_fee / 100, 2 ) AS borrow_fee, borrow_period, borrow_deadline, borrow_pay_mode, gathering_name, gathering_bank, gathering_card_no, business_type, fund_org_code, fund_order_no, refuse_type, refuse_reason,repayment_mode,bank_loan_contract_no,DATE_FORMAT(rx_insertTime, '%Y-%m-%d %H:%i:%s') as rx_insertTime, data_from from t_enterprise_order where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and rx_insertTime >= :?create_time_start and rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no = :?asset_order_no and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc limit :?page_index,10",
  "filterCorpOrderVoucher": "select v.voucher_name as voucher_name, v.voucher_url as voucher_url from t_order_voucher as v left join t_enterprise_order as o on o.order_no = v.order_no  where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no = :?asset_order_no and o.order_no = :?order_no and order_status in ::?order_status and o.asset_org_code in ::?asset_data_restriction and o.fund_org_code in ::?fund_data_restriction group by v.voucher_name,v.voucher_url",
  "corpOrdersCount": "select count(*) as total, format(sum(borrow_fee)/100,2) as fee from t_enterprise_order where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and rx_insertTime >= :?create_time_start and rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no = :?asset_order_no and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction",
  "corpOrderRepayment": "select order_no, DATE_FORMAT(repayment_date, '%Y-%m-%d') as repayment_date, repayment_card_no, repayment_bank, repayment_name, format(repayment_original_fee/100,2) as repayment_original_fee, format(repayment_interest_fee/100,2) as repayment_interest_fee, DATE_FORMAT(repayment_end_date, '%Y-%m-%d') as repayment_end_date from t_order_repayment where 1=1 and order_no=:?order_no",
  "corpOrderPayment": "select order_no, DATE_FORMAT(payment_date, '%Y-%m-%d') as payment_date, format(payment_fee/100,2) as payment_fee, payment_channel, payment_serial_no,payment_certificate_url from t_order_payment where 1=1 and order_no=:?order_no",
  "corpOrderAdvance": "select order_no, DATE_FORMAT(advance_date, '%Y-%m-%d') as advance_date, format(advance_fee/100,2) as advance_fee, advance_channel, advance_serial_no from t_order_advance where 1=1 and order_no=:?order_no",
  "corpOrderVoucher": "select order_no, voucher_name, voucher_url from t_order_voucher where 1=1 and order_no=:?order_no",
  "corpOrderContract": "select order_no, contract_type, contract_number, contract_url from t_order_contract where 1=1 and order_no=:?order_no",
  "corpOrderAccount": "select order_no, fund_org_code, fund_order_no, product_rate, format(account_fee/100,2) as account_fee, DATE_FORMAT(account_date, '%Y-%m-%d') as account_date, real_gathering_name,real_gathering_bank,real_gathering_card_no,repayment_card_no,repayment_bank,repayment_name from t_order_account where 1=1 and order_no=:?order_no",
  "corpOrdersFundExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_business_license as 营业执照号, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, u.user_name as 资金方机构名, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.business_type as 业务类型, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源 from t_enterprise_order as o left join t_user as u on o.fund_org_code = u.org_code where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no=:?asset_order_no  and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc",
  "corpOrdersAdminExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_business_license as 营业执照号, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.business_type as 业务类型, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源 from t_enterprise_order as o where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_order_no=:?asset_order_no  and order_no = :?order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc",
  "corpOrdersAssetExport": "select o.order_no as 平台订单号, o.order_status as 订单状态, o.asset_org_code as 资产方机构号, u.user_name as 资产方机构名, o.asset_order_no as 资产方订单号, DATE_FORMAT(o.borrow_date, '%Y-%m-%d') as 借款日期, DATE_FORMAT(o.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 创建时间, o.borrow_type as 借款主体类型, o.borrow_name as 借款人名称, o.borrow_business_license as 营业执照号, o.borrow_pay_mode as 借款支付方式, o.borrow_purpose as 借款用途, o.borrow_fee/100 as 借款金额（元）, o.borrow_period as 借款期限单位, o.borrow_deadline as 借款期限, o.gathering_name as 收款账号名称, o.gathering_bank as 收款账户开户行, o.gathering_card_no as 收款账户号, o.fund_org_code as 资金方机构号, o.fund_order_no as 资金方订单号, o.refuse_type as 拒绝类型, o.refuse_reason as 拒绝原因, o.repayment_mode as 还款方式, o.business_type as 业务类型, IF(o.data_from = 'A', '系统对接', '手动创建') as 数据来源 from t_enterprise_order as o left join t_user as u on o.asset_org_code = u.org_code where 1=1 and borrow_date >= :?borrow_date_start and borrow_date <= :?borrow_date_end and o.rx_insertTime >= :?create_time_start and o.rx_insertTime <= :?create_time_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and order_no = :?order_no and asset_order_no=:?asset_order_no and order_status in ::?order_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by order_no desc ",
  "corpOrdersForPublicity": "select * from t_enterprise_order where 1=1 and asset_order_no = :?asset_order_no and order_no = :?order_no and borrow_name = :?borrow_name and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code order by order_no desc ",
  "corpFundAuth": "SELECT DATE_FORMAT(fund.rx_insertTime, '%Y-%m-%d %H:%i:%s') as borrow_time, fund.borrow_business_license, fund.asset_org_code, asset.borrow_name, fund.fund_credit_status, fund.fund_credit_fee, fund.fund_credit_refuse_reason, fund.fund_org_code,asset.asset_credit_status,asset.borrow_org_code,asset.borrow_account_licence,asset.borrow_credit_code,asset.borrow_tax_registration,asset.borrow_enterprise_type,asset.borrow_type,asset.borrow_registered_address,asset.borrow_manage_address,DATE_FORMAT(asset.borrow_register_date, '%Y-%m-%d') as borrow_register_date,asset.borrow_corporate_name,asset.borrow_corporate_certificate_no,asset.borrow_phone,asset.borrow_mail,asset.borrow_bank,asset.borrow_branch_bank,asset.borrow_bank_account_name,asset.borrow_bank_account_no,asset.borrow_bank_account_address,asset.industry,asset.income,format(asset.paid_in_capital/100,2) as paid_in_capital FROM t_enterprise_fund_credit AS fund INNER JOIN t_enterprise_asset_credit AS asset ON asset.asset_org_code=fund.asset_org_code and fund.borrow_business_license = asset.borrow_business_license where 1=1 and fund.rx_insertTime>=:?borrow_date_start and fund.rx_insertTime<=:?borrow_date_end and fund.fund_credit_fee>= :?min_fee and fund.fund_credit_fee<=:?max_fee and fund.fund_org_code=:?fund_org_code and fund.asset_org_code=:?asset_org_code and asset.borrow_name like :?borrow_name and fund.fund_credit_status in ::?fund_credit_status and fund.asset_org_code in ::?asset_data_restriction and fund.fund_org_code in ::?fund_data_restriction ORDER BY fund.rx_insertTime DESC LIMIT :?page_index,10;",
  "corpFundAuthCount": "select count(*) as total FROM t_enterprise_fund_credit AS fund INNER JOIN t_enterprise_asset_credit AS asset ON asset.asset_org_code=fund.asset_org_code and fund.borrow_business_license = asset.borrow_business_license where 1=1 and fund.rx_insertTime>=:?borrow_date_start and fund.rx_insertTime<=:?borrow_date_end and fund.fund_credit_fee>= :?min_fee and fund.fund_credit_fee<=:?max_fee and fund.fund_org_code=:?fund_org_code and fund.asset_org_code=:?asset_org_code and asset.borrow_name like :?borrow_name and fund.fund_credit_status  in ::?fund_credit_status and fund.asset_org_code in ::?asset_data_restriction and fund.fund_org_code in ::?fund_data_restriction",
  "corpAssetAuth": "SELECT DATE_FORMAT(rx_insertTime, '%Y-%m-%d %H:%i:%s') as borrow_time, borrow_business_license, borrow_name, asset_org_code, asset_credit_status,borrow_org_code,borrow_account_licence,borrow_credit_code,borrow_tax_registration,borrow_enterprise_type,borrow_type,borrow_registered_address,borrow_manage_address,DATE_FORMAT(borrow_register_date, '%Y-%m-%d') as borrow_register_date,borrow_corporate_name,borrow_corporate_certificate_no,borrow_phone,borrow_bank,borrow_mail,borrow_branch_bank,borrow_bank_account_name,borrow_bank_account_no,borrow_bank_account_address,industry,income,format(paid_in_capital/100,2) as paid_in_capital,DATE_FORMAT(rx_insertTime, '%Y-%m-%d %H:%i:%s') as rx_insertTime FROM t_enterprise_asset_credit where 1=1 and rx_insertTime>=:?borrow_date_start and rx_insertTime<=:?borrow_date_end and asset_org_code=:?asset_org_code and borrow_name like :?borrow_name and asset_credit_status in ::?asset_credit_status and asset_org_code in ::?asset_data_restriction ORDER BY rx_insertTime DESC LIMIT :?page_index,10;",
  "corpAssetAuthCount": "select count(*) as total FROM t_enterprise_asset_credit where 1=1 and rx_insertTime>=:?borrow_date_start and rx_insertTime<=:?borrow_date_end and asset_org_code=:?asset_org_code and borrow_name like :?borrow_name and asset_credit_status in ::?asset_credit_status and asset_org_code in ::?asset_data_restriction",
  "corpAuthDetail": "select fund.fund_org_code, asset.borrow_name, fund.fund_credit_status, format(fund.fund_credit_fee/1000000, 2) as fund_credit_fee, IFNULL(fund.fund_credit_refuse_reason, '') as fund_credit_refuse_reason FROM t_enterprise_fund_credit AS fund INNER JOIN t_enterprise_asset_credit AS asset ON fund.borrow_business_license = asset.borrow_business_license where 1=1 and fund.fund_org_code = :?fund_org_code and fund.asset_org_code = :?asset_org_code and fund.borrow_business_license = :?borrow_business_license and fund.asset_org_code in ::?asset_data_restriction and fund.fund_org_code in ::?fund_data_restriction",
  "corpAuthDetailCount": "select count(*) as total FROM t_enterprise_fund_credit AS fund INNER JOIN t_enterprise_asset_credit AS asset ON fund.borrow_business_license = asset.borrow_business_license where fund.asset_org_code = :?asset_org_code and fund.borrow_business_license = :?borrow_business_license;",
  "corpAuthCredit": "select * from t_enterprise_credit_credit where 1=1 and borrow_business_license=:?borrow_business_license and asset_org_code=:?asset_org_code",
  "corpAuthVoucher": "select asset_org_code,borrow_business_license, voucher_name, voucher_url from t_enterprise_credit_voucher where 1=1 and asset_org_code=:?asset_org_code and borrow_business_license=:?borrow_business_license",
  "filterCorpAuthAssetVoucher": "select DISTINCT * from (select v.voucher_name as voucher_name, v.voucher_url as voucher_url from t_enterprise_credit_voucher as v left join t_enterprise_asset_credit as a on a.asset_org_code = v.asset_org_code and a.borrow_business_license=v.borrow_business_license where 1=1 and a.rx_insertTime>=:?borrow_date_start and a.rx_insertTime<=:?borrow_date_end and a.asset_org_code=:?asset_org_code and a.borrow_name like :?borrow_name and a.asset_credit_status in ::?asset_credit_status ORDER BY a.rx_insertTime DESC) x;",
  "filterCorpAuthFundVoucher": "select DISTINCT * from (select v.voucher_name as voucher_name, v.voucher_url as voucher_url from t_enterprise_credit_voucher as v inner join t_enterprise_asset_credit as a on a.asset_org_code = v.asset_org_code and a.borrow_business_license=v.borrow_business_license inner join t_enterprise_fund_credit as b on b.asset_org_code = v.asset_org_code and b.borrow_business_license=v.borrow_business_license where 1=1 and a.rx_insertTime>=:?borrow_date_start and a.rx_insertTime<=:?borrow_date_end and a.asset_org_code=:?asset_org_code and a.borrow_name like :?borrow_name and a.asset_credit_status in ::?asset_credit_status and b.fund_org_code=:?fund_org_code and b.asset_org_code in ::?asset_data_restriction and b.fund_org_code in ::?fund_data_restriction ORDER BY a.rx_insertTime DESC) x;",
  "corpAuthAssetExport": "select DATE_FORMAT(a.rx_insertTime, '%Y-%m-%d %H:%i:%s') as 授信时间, a.asset_org_code as 资产方机构号,a.borrow_business_license as 营业执照号,a.asset_credit_status as 资产方授信状态,a.borrow_name as 借款人名称,a.borrow_org_code as 组织机构代码,a.borrow_account_licence as 开户许可证,a.borrow_credit_code as 信用代码证,a.borrow_tax_registration as 税务登记证,a.borrow_enterprise_type as 企业类型,a.borrow_type as 借款主体类型,a.borrow_registered_address as 注册地址,a.borrow_manage_address as 经营地址,DATE_FORMAT(a.borrow_register_date, '%Y-%m-%d')  as 成立日期,a.borrow_corporate_name as 法人姓名,a.borrow_corporate_certificate_no as 法人身份证号,a.borrow_phone as 联系人手机号,a.borrow_mail as 借款人邮箱,a.borrow_bank as 开户行,a.borrow_branch_bank as 开户支行,a.borrow_bank_account_name as 开户名称,a.borrow_bank_account_no          as 开户银行账号,a.borrow_bank_account_address as 开户地址,a.industry as 行业,a.income as 借款人收入及负债,format(a.paid_in_capital/100,2) as 实缴资本（元） from t_enterprise_asset_credit as a left join t_user as u on a.asset_org_code = u.org_code where 1=1 and a.rx_insertTime>=:?borrow_date_start and a.rx_insertTime<=:?borrow_date_end and a.asset_org_code=:?asset_org_code and borrow_name like :?borrow_name and a.asset_credit_status in ::?asset_credit_status and a.asset_org_code in ::?asset_data_restriction ORDER BY a.rx_insertTime DESC",
  "corpAuthFundExport": "SELECT DATE_FORMAT(a.rx_insertTime,'%Y-%m-%d %H:%i:%s') AS 授信时间,a.asset_org_code AS 资产方机构号,a.borrow_business_license AS 营业执照号,b.fund_credit_status AS 资金方授信状态,a.borrow_name AS 借款人名称,a.borrow_org_code AS 组织机构代码,a.borrow_account_licence AS 开户许可证,a.borrow_credit_code AS 信用代码证,a.borrow_tax_registration AS 税务登记证,a.borrow_enterprise_type AS 企业类型,a.borrow_type AS 借款主体类型,a.borrow_registered_address AS 注册地址,a.borrow_manage_address AS 经营地址,DATE_FORMAT(a.borrow_register_date,'%Y-%m-%d') AS 成立日期,a.borrow_corporate_name AS 法人姓名,a.borrow_corporate_certificate_no AS 法人身份证号,a.borrow_phone AS 联系人手机号,a.borrow_mail AS 借款人邮箱,a.borrow_bank AS 开户行,a.borrow_branch_bank AS 开户支行,a.borrow_bank_account_name AS 开户名称,a.borrow_bank_account_no AS 开户银行账号,a.borrow_bank_account_address AS 开户地址,a.industry AS 行业,a.income AS 借款人收入及负债,format(a.paid_in_capital/100,2) AS 实缴资本（元） FROM t_enterprise_fund_credit AS b INNER JOIN t_enterprise_asset_credit AS a ON a.asset_org_code=b.asset_org_code AND a.borrow_business_license=b.borrow_business_license LEFT JOIN t_user AS u ON a.asset_org_code=u.org_code where 1=1 and a.rx_insertTime>=:?borrow_date_start and a.rx_insertTime<=:?borrow_date_end and a.asset_org_code=:?asset_org_code and b.fund_org_code=:?fund_org_code and borrow_name like :?borrow_name and a.asset_credit_status in ::?asset_credit_status and b.fund_credit_status in ::?fund_credit_status and a.asset_org_code in ::?asset_data_restriction ORDER BY a.rx_insertTime DESC",
  "repayment": "select fund_org_code,asset_org_code,DATE_FORMAT(repayment_date, '%Y-%m-%d') as repayment_date,repayment_status,repayment_bank,repayment_name,repayment_card_no,format(repayment_original_fee/100,2) as repayment_original_fee,format(repayment_interest_fee/100,2) as repayment_interest_fee, DATE_FORMAT(repayment_end_date, '%Y-%m-%d') as repayment_end_date from t_repayment where 1=1 and repayment_date >= :?repayment_date_start and repayment_date <= :?repayment_date_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and repayment_status in ::?repayment_status order by repayment_date desc limit :?page_index,10",
  "repaymentCount": "select count(*) as total from t_repayment where 1=1 and repayment_date >= :?repayment_date_start and repayment_date <= :?repayment_date_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and repayment_status in ::?repayment_status",
  "repaymentExport": "select fund_org_code as 资金方机构编码,asset_org_code as 资产方机构编码,DATE_FORMAT(repayment_date, '%Y-%m-%d') as 兑付日期,repayment_status as 兑付状态,repayment_bank as 兑付开户行,repayment_name as 兑付户名,repayment_card_no as 兑付账户,repayment_original_fee/100 as 兑付本金（单位：元）,repayment_interest_fee/100 as 兑付利息（单位：元）, DATE_FORMAT(repayment_end_date, '%Y-%m-%d') as 兑付到期日 from t_repayment where 1=1 and repayment_date >= :?repayment_date_start and repayment_date <= :?repayment_date_end and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and repayment_status in ::?repayment_status order by repayment_date desc",
  "repaymentUpdate": "update t_repayment set repayment_status=:?repayment_status, rx_updateTime=now() where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and repayment_date=:?repayment_date",
  "repaymentQuery": "select fund_org_code,asset_org_code,DATE_FORMAT(repayment_date, '%Y-%m-%d') as repayment_date,repayment_status,repayment_bank,repayment_name,repayment_card_no,format(repayment_original_fee/100,2) as repayment_original_fee,format(repayment_interest_fee/100,2) as repayment_interest_fee, DATE_FORMAT(repayment_end_date, '%Y-%m-%d') as repayment_end_date from t_repayment where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and repayment_date=:?repayment_date",
  "fundProduct": "select product_no, fund_org_code, asset_org_code, product_name, product_desc, max_fee/100 as max_fee,format(ifnull((select match_fee/100 from t_fund_match_fee where 1=1 and match_date = DATE_FORMAT(now(),'%Y%m%d') and t_fund_match_fee.product_no = t_fund_product.product_no),0),2) as used_fee from t_fund_product where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and product_no=:?product_no limit :?page_index,10",
  "fundProductCount": "select count(*) as total from t_fund_product where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and product_no=:?product_no",
  "fundProductUpdate": "update t_fund_product set max_fee=:?max_fee, rx_updateTime=now() where 1=1 and product_no=:?product_no",
  "fundProductQuery": "select product_no, fund_org_code, asset_org_code, product_name, product_desc, max_fee/100 as max_fee from t_fund_product where 1=1 and product_no=:?product_no",
  "assetAccountQuery": "select fund_org_code, asset_org_code,account_purpose,gathering_name, gathering_bank, gathering_card_no from t_asset_account where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and account_purpose=:?account_purpose and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction",
  "assetAccountCheck": "select * from t_asset_account where 1=1 and account_purpose=:?account_purpose and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code",
  "assetAccountUpdate": "update t_asset_account set gathering_name=:?gathering_name, gathering_bank=:?gathering_bank, gathering_card_no=:?gathering_card_no, rx_updateTime=now() where 1=1 and account_purpose=:?account_purpose and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code",
  "assetAccountCreate": "INSERT INTO t_asset_account set fund_org_code=:?fund_org_code, asset_org_code=:?asset_org_code, account_purpose=:?account_purpose, gathering_name=:?gathering_name, gathering_bank=:?gathering_bank, gathering_card_no=:?gathering_card_no, repayment_mode=:?repayment_mode, rx_insertTime=now(), rx_updateTime=now() ",
  "assetAccountDelete": "delete from t_asset_account where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and account_purpose=:?account_purpose",
  "fundAccountQuery": "select fund_org_code, asset_org_code,account_purpose, gathering_name, gathering_bank, gathering_card_no from t_fund_account where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and account_purpose=:?account_purpose and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction",
  "fundAccountCheck": "select * from t_fund_account where 1=1 and account_purpose=:?account_purpose and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code",
  "fundAccountUpdate": "update t_fund_account set gathering_name=:?gathering_name, gathering_bank=:?gathering_bank, gathering_card_no=:?gathering_card_no, rx_updateTime=now() where 1=1 and account_purpose=:?account_purpose and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code",
  "fundAccountCreate": "INSERT INTO t_fund_account set fund_org_code=:?fund_org_code, asset_org_code=:?asset_org_code, account_purpose=:?account_purpose, gathering_name=:?gathering_name, gathering_bank=:?gathering_bank, gathering_card_no=:?gathering_card_no, rx_insertTime=now(), rx_updateTime=now() ",
  "fundAccountDelete": "delete from t_fund_account where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and account_purpose=:?account_purpose",
  "assetFundAccountQuery": "select * from (select fund_org_code, asset_org_code,account_purpose, gathering_name, gathering_bank, gathering_card_no from t_asset_account  where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction union select fund_org_code, asset_org_code,account_purpose, gathering_name, gathering_bank, gathering_card_no from t_fund_account  where 1=1 and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction) a order by asset_org_code,fund_org_code",
  "matchFee": "select match_date,format(match_fee/100,2) as match_fee, DATE_FORMAT(rx_insertTime, '%Y-%m-%d %H:%i:%s') as rx_insertTime,DATE_FORMAT(rx_updateTime, '%Y-%m-%d %H:%i:%s') as rx_updateTime FROM t_fund_match_fee where 1=1 and product_no=:?product_no ORDER BY match_date DESC limit :?page_index,10",
  "matchFeeCount": "select count(*) as total from t_fund_match_fee where 1=1 and product_no=:?product_no",
  "operLog": "select DATE_FORMAT(o.oper_time, '%Y-%m-%d %H:%i:%s') as oper_time, dic.para_value as org_code, u.user_name as user_name, o.oper_log FROM t_oper_log as o left join t_user as u on o.create_user_id=u.user_id LEFT JOIN t_sys_para_info AS dic ON o.from_org_code=dic.para_key where 1=1 and from_table_key=:?product_no ORDER BY o.oper_time DESC limit :?page_index,10",
  "operLogCount": "select count(*) as total from t_oper_log where 1=1 and from_table_key=:?product_no",
  "operLogUpdate": "INSERT INTO t_oper_log set from_table=:?from_table, from_table_key=:?from_table_key, from_org_code=:?from_org_code, create_user_id=:?create_user_id, sub_user_id=:?sub_user_id, action_type=:?action_type, oper_log=:?oper_log, oper_time=now(), rx_insertTime=now(), rx_updateTime=now()",
  "operLogSearch": "select DATE_FORMAT(o.oper_time, '%Y-%m-%d %H:%i:%s') as oper_time, dic.para_value as org_code, u.user_name as user_name, o.oper_log, o.action_type FROM t_oper_log as o left join t_user as u on o.create_user_id=u.user_id LEFT JOIN t_sys_para_info AS dic ON o.from_org_code=dic.para_key where 1=1 and from_table=:?from_table and from_table_key=:?from_table_key ORDER BY o.oper_time DESC ",
  "operTableLogUpdate": "INSERT INTO t_oper_table_log set from_table=:?from_table, from_org_code=:?from_org_code, create_user_id=:?create_user_id, sub_user_id=:?sub_user_id, action_type=:?action_type, oper_log=:?oper_log, oper_time=now(), rx_insertTime=now(), rx_updateTime=now()",
  "assetUserQuery": "select * from t_user where 1=1 and user_type=1",
  "dictionaryCreate": "INSERT INTO t_sys_para_info set table_name = :?table_name, col_name=:?col_name, para_key=:?para_key, para_value=:?para_value, rx_insertTime=now(), rx_updateTime=now()",
  "dictionaryUpdate": "update t_sys_para_info set table_name = :?table_name, col_name=:?col_name, para_key=:?para_key, para_value=:?para_value, rx_updateTime=now() where 1=1 and table_name = :?old_table_name and col_name=:?old_col_name and para_key=:?old_para_key and para_value=:?old_para_value",
  "dictionaryDelete": "delete from t_sys_para_info where 1=1 and table_name = :?table_name and col_name=:?col_name and para_key=:?para_key and para_value=:?para_value",
  "reqGetData": "SELECT a.asset_org_code , a.fund_org_code , b.week_name , b.date AS plan_date , c.plan_fee FROM t_asset_fund AS a INNER JOIN t_user as u ON u.org_code = a.fund_org_code INNER JOIN t_date AS b ON 1 = 1 LEFT JOIN t_asset_day_plan AS c ON a.asset_org_code = c.asset_org_code and a.fund_org_code = c.fund_org_code and b.date = c.plan_date where 1=1 and a.asset_org_code =:?asset_org_code and b.`year` =:?year and b.`week` =:?week and u.user_type = '2' ORDER BY a.asset_org_code , a.fund_org_code , b.date;",
  "reqDeleteData": "DELETE FROM t_asset_day_plan where 1=1 and asset_org_code =:?asset_org_code and plan_date >=:?start_date and plan_date <=:?end_date",
  "reqInsertData": "INSERT INTO t_asset_day_plan( asset_org_code , fund_org_code , plan_date , plan_fee , rx_insertTime , rx_updateTime) SELECT :?asset_org_code , :?fund_org_code , :?plan_date , :?plan_fee , now() , now();",
  "reqDeleteDataNew": "DELETE FROM t_asset_day_plan where 1=1 and asset_org_code =:!asset_org_code and plan_date >=:!start_date and plan_date <=:!end_date",
  "reqInsertDataNew": "INSERT INTO t_asset_day_plan set asset_org_code =:!asset_org_code , fund_org_code =:!fund_org_code , plan_date =:!plan_date , plan_fee=:!plan_fee , rx_insertTime = now() , rx_updateTime = now();",
  "reqDeadlineData":"SELECT a.org_code as asset_org_code , c.deadline_id , c.deadline_name , b.week_name , b.date AS plan_date , d.plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN t_deadline AS c ON 1 = 1 LEFT JOIN t_asset_deadline_day_plan AS d ON a.org_code = d.asset_org_code and b.date = d.plan_date and c.deadline_id = d.deadline_id where 1=1 and a.org_code =:?asset_org_code and b.`year` =:?year and b.`week` = :?week ORDER BY a.org_code , c.deadline_id , b.date;",
  "reqDeadlineDeleteData": "DELETE FROM t_asset_deadline_day_plan where asset_org_code = :?asset_org_code and plan_date >= :?start_date and plan_date <= :?end_date;",
  "reqDeadlineInsertData": "INSERT INTO t_asset_deadline_day_plan( asset_org_code , deadline_id , plan_date , plan_fee , rx_insertTime , rx_updateTime) SELECT :?asset_org_code , :?deadline_id , :?plan_date , :?plan_fee , now() , now();",
  "reqDeadlineInsertDataNew": "INSERT INTO t_asset_deadline_day_plan set asset_org_code :!asset_org_code , deadline_id = :!deadline_id , plan_date =:!plan_date , plan_fee = :?plan_fee , rx_insertTime = now() , rx_updateTime = now()",
  "distriPlanAssetDeadlineDataHasFavor": "SELECT a.org_code AS asset_org_code, c.deadline_id, c.deadline_name, b.week_name, b.date AS plan_date, d.plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN ( SELECT '100' AS deadline_id, '无偏好' AS deadline_name ) AS c ON 1 = 1 LEFT JOIN t_asset_deadline_day_plan AS d ON a.org_code = d.asset_org_code AND b.date = d.plan_date AND c.deadline_id = d.deadline_id WHERE 1 = 1 AND a.org_code = :?asset_org_code AND b.`year` = :?year AND b.`week` = :?week ORDER BY a.org_code, c.deadline_id, b.date;",
  "distriPlanFundDeadlineDataHasFavor": "SELECT a.org_code AS fund_org_code, c.deadline_id, c.deadline_name, b.week_name, b.date AS plan_date, d.plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN (select '100' as deadline_id , '无偏好' as deadline_name)  AS c ON 1 = 1 LEFT JOIN t_fund_deadline_day_plan AS d ON a.org_code = d.fund_org_code AND b.date = d.plan_date AND c.deadline_id = d.deadline_id WHERE 1 = 1 AND a.org_code = :?fund_org_code AND b.`year` = :?year AND b.`week` = :?week ORDER BY a.org_code, c.deadline_id, b.date;",
  "distriPlanAssetDeadlineInsertData": "INSERT INTO t_asset_deadline_day_plan set asset_org_code = :!asset_org_code, deadline_id=:!deadline_id , plan_date =:!plan_date , plan_fee =:!plan_fee, rx_insertTime = now() , rx_updateTime = now()",
  "distriPlanFundDeadlineInsertData": "INSERT INTO t_fund_deadline_day_plan set fund_org_code = :?fund_org_code, deadline_id=:!deadline_id , plan_date =:!plan_date , plan_fee =:!plan_fee, rx_insertTime = now() , rx_updateTime = now()",
  "reqHisList":"SELECT a.asset_org_code , b.`year` , b.`week` , b.week_name , c.start_date , c.end_date , a.plan_fee FROM t_asset_week_plan AS a INNER JOIN t_date AS b ON a.plan_date = b.date INNER JOIN t_week AS c ON c.`year` = b.`year` and c.`week` = b.`week` where 1=1 and a.asset_org_code =:?asset_org_code and CONCAT(b.`year` , b.`week`) < :?end_date ORDER BY b.`year` DESC , b.`week` DESC , b.date LIMIT :?page_index , 70;",
  "reqHisCount":"SELECT ceil(count(*) / 7) AS count FROM t_asset_week_plan AS a INNER JOIN t_date AS b ON a.plan_date = b.date where 1=1 and asset_org_code = :?asset_org_code and CONCAT(b.`year` , b.`week`) < :?end_date;",
  "colGetData": "SELECT a.fund_org_code , a.asset_org_code , b.week_name , b.date AS plan_date , c.plan_fee FROM t_asset_fund AS a INNER JOIN t_user as u ON u.org_code = a.asset_org_code INNER JOIN t_date AS b ON 1 = 1 LEFT JOIN t_fund_day_plan AS c ON a.asset_org_code = c.asset_org_code and a.fund_org_code = c.fund_org_code and b.date = c.plan_date where 1=1 and a.fund_org_code = :?fund_org_code and b.`year` = :?year and b.`week` = :?week AND u.user_type = 1 ORDER BY a.fund_org_code , a.asset_org_code , b.date;",
  "colDeleteData": "DELETE FROM t_fund_day_plan where 1=1 and fund_org_code = :?fund_org_code and plan_date >=:?start_date and plan_date <=:?end_date",
  "colInsertData": "INSERT INTO t_fund_day_plan( fund_org_code , asset_org_code , plan_date , plan_fee , rx_insertTime , rx_updateTime) SELECT :?fund_org_code , :?asset_org_code , :?plan_date , :?plan_fee , now() , now();",
  "colDeleteDataNew": "DELETE FROM t_fund_day_plan where 1=1 and fund_org_code = :!fund_org_code and plan_date >=:!start_date and plan_date <=:!end_date",
  "colInsertDataNew": "INSERT INTO t_fund_day_plan set fund_org_code =:!fund_org_code , asset_org_code = :!asset_org_code , plan_date =:!plan_date , plan_fee =:!plan_fee , rx_insertTime = now() , rx_updateTime = now();",
  "colDeadlineGetData": "SELECT a.org_code as fund_org_code , c.deadline_id , c.deadline_name , b.week_name , b.date AS plan_date , d.plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN t_deadline AS c ON 1 = 1 LEFT JOIN t_fund_deadline_day_plan AS d ON a.org_code = d.fund_org_code and b.date = d.plan_date and c.deadline_id = d.deadline_id where 1=1 and a.org_code = :?fund_org_code and b.`year` = :?year and b.`week` = :?week ORDER BY a.org_code , c.deadline_id , b.date;",
  "colDeadlineDeleteData": "DELETE FROM t_fund_deadline_day_plan where fund_org_code = :?fund_org_code and plan_date >= :?start_date and plan_date <= :?end_date;",
  "colDeadlineInsertData": "INSERT INTO t_fund_deadline_day_plan( fund_org_code , deadline_id , plan_date , plan_fee , rx_insertTime , rx_updateTime) SELECT :?fund_org_code , :?deadline_id , :?plan_date , :?plan_fee , now() , now();",
  "colDeadlineDeleteDataNew": "DELETE FROM t_fund_deadline_day_plan where fund_org_code = :!fund_org_code and plan_date >= :!start_date and plan_date <= :!end_date;",
  "colDeadlineInsertDataNew": "INSERT INTO t_fund_deadline_day_plan set fund_org_code = :!fund_org_code , deadline_id =:!deadline_id , plan_date =:!plan_date , plan_fee =:!plan_fee , rx_insertTime = now(), rx_updateTime = now();",
  "colHisList":"select a.fund_org_code , b.`year` , b.`week` , b.week_name , c.start_date , c.end_date , a.plan_fee from t_fund_week_plan as a inner join t_date as b on a.plan_date = b.date inner join t_week as c on c.`year` = b.`year` and c.`week` = b.`week` where 1=1 and a.fund_org_code = :?fund_org_code and CONCAT(b.`year` , b.`week`) < :?end_date order by b.`year` desc , b.`week` desc , b.date limit :?page_index , 70;",
  "colHisCount":"select ceil(count(*) / 7) as count from t_fund_week_plan as a inner join t_date as b on a.plan_date = b.date where 1=1 and fund_org_code = :?fund_org_code and CONCAT(b.`year` , b.`week`) < :?end_date;",
  "assetDistribution":"SELECT IFNULL(b.asset_org_code , :?org_code) AS asset_org_code , a.deadline_id , a.deadline_name , IFNULL(b.plan_ratio, 0)  as plan_ratio FROM t_deadline AS a LEFT JOIN t_asset_deadline_plan AS b ON a.deadline_id = b.deadline_id and b.asset_org_code =:?org_code ORDER BY a.deadline_id;",
  "assetDistributionDel": "DELETE FROM t_asset_deadline_plan where 1=1 and asset_org_code =:?org_code",
  "assetDistributionInsert": "INSERT INTO t_asset_deadline_plan( asset_org_code , deadline_id , plan_ratio , rx_insertTime , rx_updateTime) VALUES( :?asset_org_code , :?deadline_id , :?plan_ratio , now() , now())",
  "fundDistribution":"SELECT IFNULL(b.fund_org_code , :?org_code) AS fund_org_code , a.deadline_id , a.deadline_name , IFNULL(b.plan_ratio, 0) as plan_ratio FROM t_deadline AS a LEFT JOIN t_fund_deadline_plan AS b ON a.deadline_id = b.deadline_id and b.fund_org_code = :?org_code ORDER BY a.deadline_id;",
  "fundDistributionDel": "DELETE FROM t_fund_deadline_plan where 1=1 and fund_org_code = :?org_code",
  "fundDistributionInsert": "INSERT INTO t_fund_deadline_plan( fund_org_code , deadline_id , plan_ratio , rx_insertTime , rx_updateTime) VALUES( :?fund_org_code , :?deadline_id , :?plan_ratio , now() , now());",
  "fundSupplyWeekly": "select a.deadline_id ,a.deadline_name ,IFNULL(c.fund_fee,0) as fund_fee,IFNULL(b.asset_fee,0) as asset_fee ,IFNULL(c.fund_fee,0) - IFNULL(b.asset_fee,0) as result_fee from t_deadline as a left join (select deadline_id,ceil(sum(plan_fee)/1000000) as asset_fee from t_asset_deadline_day_plan where plan_date >= :?start_date and plan_date <= :?end_date group by deadline_id )  as b on a.deadline_id = b.deadline_id left join (select deadline_id,ceil(sum(plan_fee)/1000000) as fund_fee from t_fund_deadline_day_plan where plan_date >= :?start_date and plan_date <= :?end_date group by deadline_id) as c on a.deadline_id = c.deadline_id order by a.deadline_id;",
  "fundSupplyDaily": "select a.deadline_id ,a.deadline_name ,IFNULL(c.fund_fee,0) as fund_fee,IFNULL(b.asset_fee,0) as asset_fee ,IFNULL(c.fund_fee,0) - IFNULL(b.asset_fee,0) as result_fee from t_deadline as a left join (select m.deadline_id,ceil(sum(m.plan_fee)/1000000) as asset_fee from t_asset_deadline_day_plan as m inner join t_date as c on m.plan_date = c.date where c.`year` = :?year and c.`week` = :?week and c.week_name = :?week_name group by m.deadline_id )  as b on a.deadline_id = b.deadline_id left join (select n.deadline_id,ceil(sum(n.plan_fee)/1000000) as fund_fee from t_fund_deadline_day_plan as n inner join t_date as c on n.plan_date = c.date where c.`year` = :?year and c.`week` = :?week and c.week_name = :?week_name group by n.deadline_id) as c on a.deadline_id = c.deadline_id order by a.deadline_id;",
  "fundSupplyAsset":"SELECT a.org_code as asset_org_code , c.deadline_id , c.deadline_name , b.week_name , b.date AS plan_date , ceil(d.plan_fee / 1000000) as plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN t_deadline AS c ON 1 = 1 LEFT JOIN t_asset_deadline_day_plan AS d ON a.org_code = d.asset_org_code and b.date = d.plan_date and c.deadline_id = d.deadline_id where 1=1 and a.org_code =:?asset_org_code and b.`year` =:?year and b.`week` = :?week ORDER BY a.org_code , c.deadline_id , b.date;",
  "fundSupplyFund":"SELECT a.org_code as fund_org_code , c.deadline_id , c.deadline_name , b.week_name , b.date AS plan_date , ceil(d.plan_fee / 1000000) as plan_fee FROM t_user AS a INNER JOIN t_date AS b ON 1 = 1 INNER JOIN t_deadline AS c ON 1 = 1 LEFT JOIN t_fund_deadline_day_plan AS d ON a.org_code = d.fund_org_code and b.date = d.plan_date and c.deadline_id = d.deadline_id where 1=1 and a.org_code = :?fund_org_code and b.`year` = :?year and b.`week` = :?week ORDER BY a.org_code , c.deadline_id , b.date;",
  "distrSettingGet":"select a.asset_org_code , a.match_date , a.fund_org_code , a.asset_fee , a.fund_fee , a.max_fee , a.min_fee , a.finish_max_fee , b.is_check_stock, b.stock_day_count, b.priority from t_asset_fund_fee as a inner join t_user AS uf ON a.fund_org_code = uf.org_code inner join t_user AS ua ON a.asset_org_code = ua.org_code inner join t_asset_fund as b on a.asset_org_code = b.asset_org_code and a.fund_org_code = b.fund_org_code where 1=1 and a.asset_org_code =:?asset_org_code and a.fund_org_code =:?fund_org_code and match_date = :?match_date and ua.user_type = '1' and uf.user_type = '2' order by a.asset_org_code, a.fund_org_code",
  "distrDeadlineSettingGet":"select * from t_asset_fund_deadline_fee as fee INNER JOIN t_user as ua ON ua.org_code = fee.asset_org_code INNER JOIN t_user as uf ON uf.org_code = fee.fund_org_code where 1 = 1 and ua.user_type = '1' and uf.user_type = '2' and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and match_date = :?match_date and deadline_id = :?deadline_id",
  "distrDeadlineAssetSettingUpdate":"update t_asset_fund_deadline_fee set asset_fee = :!asset_fee where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and deadline_id = :?deadline_id and match_date = :?match_date;",
  "distrDeadlineFundSettingUpdate":"update t_asset_fund_deadline_fee set fund_fee = :!fund_fee where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and deadline_id = :?deadline_id and match_date = :?match_date;",
  "distrDeadlineAdminSettingUpdate":"update t_asset_fund_deadline_fee set asset_fee = :!asset_fee ,fund_fee = :!fund_fee where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and deadline_id = :?deadline_id and match_date = :?match_date;",
  "distrDeadlineSettingUpdateOtherFee":"update t_asset_fund_deadline_fee set max_fee = IF( asset_fee < fund_fee , asset_fee , fund_fee) , min_fee = IF( asset_fee < fund_fee , asset_fee , fund_fee) / 2 where 1=1 and asset_org_code =:?asset_org_code and fund_org_code = :?fund_org_code and deadline_id = :?deadline_id and match_date = :?match_date;",
  "distrDeadlineSettingCollectFee":"update t_asset_fund_fee as a inner join ( select asset_org_code,fund_org_code,match_date ,sum(asset_fee) as asset_fee,sum(fund_fee) as fund_fee ,sum(max_fee) as max_fee ,sum(min_fee) as min_fee from t_asset_fund_deadline_fee where asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and match_date = :?match_date group by asset_org_code,fund_org_code,match_date) as b on a.asset_org_code = b.asset_org_code and a.fund_org_code = b.fund_org_code and a.match_date = b.match_date set a.asset_fee = b.asset_fee, a.fund_fee = b.fund_fee, a.max_fee = b.max_fee, a.min_fee = b.min_fee;",
  "distrDeadlineSettingCaptchaUpdate": "update t_asset_fund_deadline_fee set verification_code = :?verification_code, verification_valid_time = now() where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and deadline_id = :?deadline_id and match_date = :?match_date;",
  "distrSettingUpdateAssetFee":"update t_asset_fund_fee set asset_fee = :?asset_fee where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and match_date = :?match_date;",
  "distrSettingUpdatePriority": "update t_asset_fund set priority = :?priority, is_check_stock=:?is_check_stock, stock_day_count=:?stock_day_count where 1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code",
  "getLastWeek": "SELECT `year` , `week` FROM t_date where 1=1 and date = date_format( date_add(now() , INTERVAL -7 DAY) , '%Y-%m-%d');",
  "getThisWeek": "SELECT `year` , `week` FROM t_date where 1=1 and date = date_format( date_add(now() , INTERVAL 0 DAY) , '%Y-%m-%d');",
  "getNextWeek": "SELECT `year` , `week` FROM t_date where 1=1 and date = date_format( date_add(now() , INTERVAL 7 DAY) , '%Y-%m-%d');",
  "getAllWeekAndDate": "select `year`,`week`,start_date,end_date  from t_week where `year` >= DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 year),'%Y')and `year` <= DATE_FORMAT(DATE_ADD(now(),INTERVAL 2 year),'%Y') order by `year`,`week`",
  "getDateRange": "SELECT min(date) AS start_date , max(date) AS end_date FROM t_date where 1=1 and `year` =:?year and `week` =:?week;",
  "borrowDeadline":"select deadline_name,`from`,`to`  from t_deadline order by deadline_id",
  "assetFindFund":"select fund_org_code from t_asset_fund where asset_org_code = :?asset_org_code;",
  "fundFindAsset":"select asset_org_code from t_asset_fund where fund_org_code = :?fund_org_code;",
  "deadline":"select deadline_id,deadline_name,`from`, `to` from t_deadline order by deadline_id",
  "fundStatisticsAssetTotal":"SELECT a.fund_org_code,b.deadline_name,max(a.deadline_id) AS deadline_id,format(sum(a.raise_fee)/1000000,0) AS raise_fee FROM t_asset_fund_day_match AS a INNER JOIN t_user as u ON a.fund_org_code = u.org_code INNER JOIN t_deadline AS b ON a.deadline_id=b.deadline_id where 1=1 and u.user_from = '1' and a.asset_org_code=:?asset_org_code and a.match_date>=:?start_date and a.match_date<=:?end_date  GROUP BY a.fund_org_code,b.deadline_name ORDER BY fund_org_code,deadline_id;",
  "fundStatisticsFundTotal":"select a.asset_org_code,b.deadline_name,max(a.deadline_id) as deadline_id,format(sum(a.raise_fee)/1000000,0) as raise_fee from t_asset_fund_day_match as a INNER JOIN t_user as u ON a.asset_org_code = u.org_code inner join t_deadline as b on a.deadline_id = b.deadline_id where 1=1 and u.user_from = '1' and a.fund_org_code =:?fund_org_code and a.match_date >=:?start_date and a.match_date <=:?end_date group by a.asset_org_code,b.deadline_name order by asset_org_code,deadline_id;",
  "fundStatisticsAsset":" SELECT a.fund_org_code , format( max(c.fund_stock_fee) / 1000000 , 0 ) AS fund_stock_fee , format(sum(d.plan_fee) / 1000000 , 0) AS plan_fee , format(sum(a.match_fee) / 1000000 , 0) AS match_fee , format(sum(a.raise_fee) / 1000000 , 0) AS raise_fee , format( sum(a.raise_fee)/ sum(match_fee) * 100 , 2 ) AS raise_rate , format(sum(a.expend_fee) / 1000000 , 0) AS account_fee FROM ( SELECT asset_org_code , fund_org_code , match_date , sum(match_fee) AS match_fee , sum(raise_fee) AS raise_fee , sum(expend_fee) AS expend_fee FROM t_asset_fund_day_match INNER JOIN t_user AS u ON u.org_code = fund_org_code where 1 = 1 and u.user_from = '1' and asset_org_code = :?asset_org_code and match_date >= :?start_date and match_date <= :?end_date and deadline_id = :?deadline_id GROUP BY asset_org_code , fund_org_code , match_date ) AS a INNER JOIN (select fund_org_code,sum(fund_stock_fee) as fund_stock_fee  from t_asset_fund where 1=1 and asset_org_code = :?asset_org_code group by fund_org_code) as c ON a.fund_org_code = c.fund_org_code INNER JOIN t_fund_day_plan AS d ON a.asset_org_code = d.asset_org_code and a.fund_org_code = d.fund_org_code and a.match_date = d.plan_date GROUP BY a.fund_org_code;",
  "fundStatisticsFund":"SELECT a.asset_org_code , format( max(c.fund_stock_fee) / 1000000 , 0 ) AS fund_stock_fee , format(sum(d.plan_fee) / 1000000 , 0) AS plan_fee , format(sum(match_fee) / 1000000 , 0) AS match_fee , format(sum(raise_fee) / 1000000 , 0) AS raise_fee , format( sum(a.raise_fee)/ sum(match_fee) * 100 , 2 ) AS raise_rate , format(sum(account_fee) / 1000000 , 0) AS expend_fee FROM ( SELECT asset_org_code , fund_org_code , match_date , sum(match_fee) AS match_fee , sum(raise_fee) AS raise_fee , sum(account_fee) AS account_fee FROM t_asset_fund_day_match INNER JOIN t_user AS u ON u.org_code = asset_org_code where 1=1 and u.user_from = '1' and fund_org_code = :?fund_org_code and match_date >= :?start_date and match_date <= :?end_date and deadline_id = :?deadline_id GROUP BY asset_org_code , fund_org_code , match_date ) AS a INNER JOIN (select asset_org_code,sum(fund_stock_fee) as fund_stock_fee  from t_asset_fund where 1=1 and fund_org_code = :?fund_org_code group by asset_org_code) as c ON a.asset_org_code = c.asset_org_code INNER JOIN t_asset_day_plan AS d ON a.asset_org_code = d.asset_org_code and a.fund_org_code = d.fund_org_code and a.match_date = d.plan_date GROUP BY a.asset_org_code;",
  "fundStatisticsAssetDeadline":"SELECT b.deadline_name , max(a.deadline_id) AS deadline_id , format( max(c.fund_stock_fee) / 1000000 , 0 ) AS fund_stock_fee , format(sum(d.plan_fee) / 1000000 , 0) AS plan_fee , format(sum(match_fee) / 1000000 , 0) AS match_fee , format(sum(raise_fee) / 1000000 , 0) AS raise_fee , format( sum(a.raise_fee)/ sum(match_fee) * 100 , 2 ) AS raise_rate , format(sum(account_fee) / 1000000 , 0) AS expend_fee FROM ( SELECT asset_org_code , deadline_id , match_date , sum(match_fee) AS match_fee , sum(raise_fee) AS raise_fee , sum(account_fee) AS account_fee FROM t_asset_fund_day_match where 1=1 and fund_org_code = :?fund_org_code and match_date >= :?start_date and match_date <= :?end_date and asset_org_code = :?asset_org_code GROUP BY asset_org_code , deadline_id , match_date ) AS a INNER JOIN t_deadline AS b ON a.deadline_id = b.deadline_id INNER JOIN( SELECT deadline_id , sum(fund_stock_fee) AS fund_stock_fee FROM t_asset_fund_deadline_stcok where   1=1 and fund_org_code = :?fund_org_code and asset_org_code =  :?asset_org_code GROUP BY deadline_id ) AS c ON a.deadline_id = c.deadline_id INNER JOIN t_asset_deadline_day_plan AS d ON a.asset_org_code = d.asset_org_code and a.deadline_id = d.deadline_id and a.match_date = d.plan_date GROUP BY b.deadline_name ORDER BY deadline_id; ",
  "fundStatisticsFundDeadline":"SELECT b.deadline_name , max(a.deadline_id) AS deadline_id , format( max(c.fund_stock_fee) / 1000000 , 0 ) AS fund_stock_fee , format(sum(d.plan_fee) / 1000000 , 0) AS plan_fee , format(sum(match_fee) / 1000000 , 0) AS match_fee , format(sum(raise_fee) / 1000000 , 0) AS raise_fee , format( sum(a.raise_fee)/ sum(match_fee) * 100 , 2 ) AS raise_rate , format(sum(expend_fee) / 1000000 , 0) AS account_fee FROM ( SELECT fund_org_code , deadline_id , match_date , sum(match_fee) AS match_fee , sum(raise_fee) AS raise_fee , sum(expend_fee) AS expend_fee FROM t_asset_fund_day_match where 1=1 and asset_org_code = :?asset_org_code and match_date >= :?start_date and match_date <= :?end_date and fund_org_code = :?fund_org_code GROUP BY fund_org_code , deadline_id , match_date ) AS a INNER JOIN t_deadline AS b ON a.deadline_id = b.deadline_id INNER JOIN( SELECT  deadline_id , sum(fund_stock_fee) AS fund_stock_fee FROM t_asset_fund_deadline_stcok where   1=1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code GROUP BY deadline_id ) AS c ON a.deadline_id = c.deadline_id INNER JOIN t_fund_deadline_day_plan AS d ON a.fund_org_code = d.fund_org_code and a.deadline_id = d.deadline_id and a.match_date = d.plan_date GROUP BY b.deadline_name ORDER BY deadline_id; ",
  "adminStatisticsPlatformScale":"select borrow_date,borrow_count,borrow_fee,d_000,d_001,d_002,d_003,d_004,d_005,d_006,d_007 from t_edi_order_total_report where borrow_date >=:?start_date and borrow_date <= :?end_date;",
  "adminStatisticsPlatformCollect":"select borrow_date,borrow_count,borrow_fee,d_000,d_001,d_002,d_003,d_004,d_005,d_006,d_007 from t_edi_order_raise_report where borrow_date >=:?start_date and borrow_date <= :?end_date;",
  "subUserQuery": "select * from t_sub_user where 1=1 and sub_user_id=:?sub_user_id",
  "subUserManageCreate": "INSERT INTO t_sub_user set sub_user_id=:?sub_user_id, user_id=:?user_id, user_account=:?user_account, password=:?password, user_name=:?user_name, company=:?company, department=:?department, tel=:?tel, mobile=:?mobile, email=:?email, qq=:?qq, use_yn=:?use_yn, remark=:?remark, create_user_id=:?create_user_id, rx_insertTime=now(), rx_updateTime=now()",
  "subUserManageCount": "select count(*) as total from t_sub_user a left join t_user b on a.user_id=b.user_id where 1=1 and a.user_id=:?user_id and a.user_account like :?user_account and a.user_name like :?user_name and b.user_type=:?user_type and b.org_code=:?org_code",
  "subUserManageQuery": "select a.sub_user_id, a.user_id, a.user_account, a.password, a.user_name, a.company, a.department, a.tel, a.mobile, a.email, a.qq, a.use_yn, a.remark, a.create_user_id, a.rx_insertTime, a.rx_updateTime, b.user_account as main_user_account, b.user_type, b.org_code from t_sub_user a left join t_user b on a.user_id=b.user_id where 1=1 and a.user_id=:?user_id and a.user_id=:?user_id and a.user_account like :?user_account and a.user_name like :?user_name and b.user_type=:?user_type and b.org_code=:?org_code order by b.user_type asc, b.org_code asc, a.rx_updateTime desc, a.rx_insertTime desc limit :?page_index,10",
  "subUserManagePreCount": "select count(*) as total from t_sub_user where 1=1 and ( 1=2 or user_account=:?user_account ) and user_id=:?user_id",
  "subUserManageUpdate": "update t_sub_user set user_account=:?user_account, password=:?password, user_name=:?user_name, tel=:!tel, mobile=:!mobile, email=:!email, rx_updateTime=now() where 1=1 and sub_user_id=:?sub_user_id",
  "subUserManageDelete": "DELETE FROM t_sub_user where 1=1 and sub_user_id=:?sub_user_id",
  "mainUserMenusSearch": "select * from (select a.func_id,b.func_name,b.f_func_id,b.func_level,b.sort_id from t_user_func a left join t_func b on a.func_id = b.func_id where 1=1 and a.user_id=:?user_id union select a.func_id,b.func_name,b.f_func_id,b.func_level,b.sort_id from t_role_func a left join t_func b on a.func_id = b.func_id left join t_role_user c on a.role_id = c.role_id where 1=1 and c.user_id=:?user_id) aa order by aa.func_level,aa.sort_id",
  "userFuncQuery": "select func_id from t_user_func where 1=1 and user_id=:?user_id",
  "userFuncDelete": "delete from t_user_func where 1=1 and user_id=:?user_id",
  "userFuncCreate": "insert into t_user_func set id=:?id, user_id=:?user_id, func_id=:?func_id, func_flag=:?func_flag, use_yn=:?use_yn, create_user_id=:?create_user_id, rx_insertTime=now(), rx_updateTime=now()",
  "allMenusSearch": "select * from t_func where 1=1 order by func_level,sort_id",
  "menuDetailSearch": "select * from t_func where 1=1 and func_id=:?func_id",
  "maxMenuSortIdSearch": "select max(sort_id) as max_sort_id from t_func where 1=1 and f_func_id=:?f_func_id",
  "menuManageCreate": "INSERT INTO t_func set func_id=:?func_id, f_func_id=:!f_func_id, func_name=:?func_name, func_desc=:?func_desc, func_path=:?func_path, page_id=:?page_id, func_level=:?func_level, func_type=:?func_type, func_role_type=:?func_role_type, func_img=:?func_img, sort_id=:?sort_id, use_yn=:?use_yn, remark=:?remark, create_user_id=:?create_user_id, rx_insertTime=now(), rx_updateTime=now()",
  "menuManageUpdate": "update t_func set func_name=:?func_name, func_path=:?func_path, page_id=:?page_id, func_role_type=:?func_role_type, func_img=:?func_img, rx_updateTime=now() where 1=1 and func_id=:?func_id",
  "menuManageDeleteWithChildren": "DELETE FROM t_func where 1=1 and func_id in (:?func_id_array)",
  "childrenMenuSearch": "select * from t_func where 1=1 and f_func_id=:!func_id order by func_level,sort_id",
  "closestUpMenuSearch": "select * from t_func where 1=1 and f_func_id=:!f_func_id and sort_id<:?sort_id order by sort_id desc",
  "closestDownMenuSearch": "select * from t_func where 1=1 and f_func_id=:!f_func_id and sort_id>:?sort_id order by sort_id asc",
  "menuManageUpdateSortId": "update t_func set sort_id=:?sort_id, rx_updateTime=now() where 1=1 and func_id=:?func_id",

  "cooperatorInfoCount": "select count(*) as total from t_asset_fund as a inner join t_user as b on a.fund_org_code=b.org_code inner join t_user as c on a.asset_org_code=c.org_code where 1=1 and a.fund_org_code=:?fund_org_code and a.asset_org_code=:?asset_org_code and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction",
  "cooperatorInfoQuery": "select a.asset_org_code,a.fund_org_code,b.user_name as fund_user_name,b.user_full_name as fund_user_full_name,b.user_from as fund_user_from,b.linkman as fund_linkman,b.mobile as fund_mobile,b.email as fund_email,c.user_name as asset_user_name,c.user_full_name as asset_user_full_name,c.user_from as asset_user_from,c.linkman as asset_linkman,c.mobile as asset_mobile,c.email as asset_email from t_asset_fund as a inner join t_user as b on a.fund_org_code=b.org_code inner join t_user as c on a.asset_org_code=c.org_code where 1=1 and a.fund_org_code=:?fund_org_code and a.asset_org_code=:?asset_org_code and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction <order by :?order_column> limit :?page_index,10",
  "cooperatorInfoQueryOne": "select a.asset_org_code,a.fund_org_code,b.user_name as fund_user_name,b.user_full_name as fund_user_full_name,b.user_from as fund_user_from,b.linkman as fund_linkman,b.mobile as fund_mobile,b.email as fund_email,c.user_name as asset_user_name,c.user_full_name as asset_user_full_name,c.user_from as asset_user_from,c.linkman as asset_linkman,c.mobile as asset_mobile,c.email as asset_email from t_asset_fund as a inner join t_user as b on a.fund_org_code=b.org_code inner join t_user as c on a.asset_org_code=c.org_code where 1=1 and a.fund_org_code=:?fund_org_code and a.asset_org_code=:?asset_org_code",
  "cooperatorInfoPreCount": "select count(*) as total from t_asset_fund where 1=1 and asset_org_code=:?asset_org_code and fund_org_code=:?fund_org_code",
  "cooperatorInfoCreate": "INSERT INTO t_asset_fund set asset_org_code=:?asset_org_code, fund_org_code=:?fund_org_code, rx_insertTime=now(), rx_updateTime=now()",
  "cooperatorInfoDelete": "delete from t_asset_fund where 1=1 and asset_org_code=:?asset_org_code and fund_org_code=:?fund_org_code",
  "cooperatorInfoSupplyment":"call p_asset_fund_data_init();",
  "userSearchByUserFullName": "select * from t_user where 1=1 and user_full_name=:!user_full_name and user_type=:!user_type and user_from=2",
  "userFullNameCheck": "select * from t_user where 1=1 and user_full_name=:!user_full_name and user_type=:!user_type and user_from=2 and org_code<>:?org_code",
  "userSearchByOrgCode": "select * from t_user where 1=1 and org_code=:!org_code",
  "maxOrgCodeSearchByUserType": "select max(org_code) as max_org_code from t_user where 1=1 and user_type=:!user_type and user_from=2",
  "notAddRelationAssetOrgQuery": "select * from t_user where 1=1 and user_type=1 and org_code not in (select asset_org_code from t_asset_fund where 1=1 and fund_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction) order by org_code",
  "notAddRelationFundOrgQuery": "select * from t_user where 1=1 and user_type=2 and org_code not in (select fund_org_code from t_asset_fund where 1=1 and asset_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction) order by org_code",
  "addedRelationAssetOrgQuery": "select * from t_user where 1=1 and user_type=1 and org_code in (select asset_org_code from t_asset_fund where 1=1 and fund_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction) order by org_code",
  "addedRelationFundOrgQuery": "select * from t_user where 1=1 and user_type=2 and org_code in (select fund_org_code from t_asset_fund where 1=1 and asset_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction) order by org_code",

  "roleQuery": "select * from t_role where 1=1 and role_id=:?role_id",
  "roleManageCreate": "INSERT INTO t_role set role_id=:?role_id ,role_name=:?role_name ,role_type=:?role_type,remark=:?remark,sub_user_yn=:?sub_user_yn,create_user_id=:?create_user_id,rx_insertTime=now(),rx_updateTime=now()",
  "roleManageCount": "select count(*) as total from t_role where 1=1  and role_name like :?role_name",
  "roleManageQuery": "select role_id,role_name,role_type,sub_user_yn,sys_yn,remark,DATE_FORMAT(rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_role where 1=1 and role_name like :?role_name order by sys_yn,rx_insertTime  limit :?page_index,10",
  "roleManagePreCount": "select count(*) as total from t_role where 1=1 and role_name=:?role_name ",
  "roleManageCheckCount": "select count(*) as total from t_role where 1=1 and role_name=:?role_name and role_id not in (:?role_id) ",
  "roleManageUpdate": "update t_role set  role_name=:?role_name, role_type=:?role_type, remark=:?remark, rx_updateTime=now() where 1=1 and role_id=:?role_id",
  "roleManageDelete": "DELETE FROM t_role where 1=1 and role_id=:?role_id",
  "roleManageFuncMainSearch": "SELECT f.func_id ,f.func_name,f.f_func_id,f.func_level,f.func_img, case ifnull((select func_id from t_role_func where func_id = f.func_id and role_id = :?role_id),'') when '' then '0' else '1' end as func_check FROM t_func f where 1=1 and f.func_level=0 and f.func_role_type=:?role_type order by f.sort_id",
  "roleManageFuncSubSearch": "SELECT f.func_id ,f.func_name,f.f_func_id,f.func_level,case ifnull((select  func_id from t_role_func where func_id = f.func_id and role_id = :?role_id),'') when '' then '0' else '1' end as func_check FROM t_func f where 1=1 and f.func_level != 0 order by f.sort_id",
  "roleManageFuncDelete": "delete from t_role_func where 1=1 and role_id=:?role_id",
  "roleManageFuncCreate": "insert into t_role_func set id=:?id, role_id=:?role_id, func_id=:?func_id, create_user_id=:?create_user_id, rx_insertTime=now(), rx_updateTime=now()",
  "roleManageUserSearch": "SELECT b.user_id,b.user_account,b.user_name,b.org_code,DATE_FORMAT(b.rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_role_user a inner join t_user b on a.user_id=b.user_id where 1=1 and a.role_id=:?role_id  and b.user_account like :?user_account ORDER BY b.rx_insertTime",
  "roleManageUserAddSearch": "SELECT a.user_id,a.user_account,a.user_name,a.org_code,DATE_FORMAT(a.rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_user a where 1=1 and a.user_id NOT IN ( SELECT user_id  from t_role_user where role_id=:?role_id ) and a.user_type in ( SELECT  role_type  from t_role where role_id=:?role_id) and a.user_account like :?user_account ORDER BY a.rx_insertTime",
  "roleManageUserAdd": "insert into t_role_user set id=:?id, role_id=:?role_id, user_id=:?user_id, create_user_id=:?create_user_id, rx_insertTime=now(), rx_updateTime=now()",
  "roleManageUserDelete": "delete from t_role_user where 1=1 and role_id=:?role_id and user_id=:?user_id",
  "roleMenuManageDeleteWithChildren": "delete from t_role_func where 1=1 and func_id in (:?func_id_array)",
  "userMenuManageDeleteWithChildren": "delete from t_user_func where 1=1 and func_id in (:?func_id_array)",
  "financeLoan": "select a.loan_code, a.fund_org_code, a.asset_org_code, a.edi_user_id, b.user_from, a.data_from, DATE_FORMAT(a.account_date, '%Y-%m-%d') as account_date, DATE_FORMAT(a.rx_insertTime, '%Y-%m-%d') as rx_insertTime, format(a.account_fee/100,2) as account_fee, a.real_gathering_name, a.real_gathering_bank, a.real_gathering_card_no, a.repayment_name, a.repayment_bank, a.remark, a.repayment_card_no, a.pay_channel, a.loan_status, a.loan_file_url, a.account_voucher_url, b.user_full_name as fund_user_full_name, c.user_full_name as asset_user_full_name from t_finance_loan as a left join t_user as b on a.fund_org_code = b.org_code left join t_user as c on a.asset_org_code = c.org_code where 1=1 and a.loan_code=:?loan_code and a.asset_org_code=:?asset_org_code and a.fund_org_code=:?fund_org_code and a.real_gathering_name like :?real_gathering_name and a.loan_status=:?loan_status and b.user_from=:?fund_user_from and a.account_date=:?account_date and a.data_from=:?data_from and a.account_date >= :?account_date_start and a.account_date <= :?account_date_end and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction order by loan_code desc limit :?page_index,10",
  "financeLoanCount": "select count(*) as total from t_finance_loan as a left join t_user as b on a.fund_org_code = b.org_code where 1=1 and a.loan_code=:?loan_code and a.fund_org_code=:?fund_org_code and a.real_gathering_name like :?real_gathering_name and a.loan_status=:?loan_status and b.user_from=:?fund_user_from and a.account_date=:?account_date and a.data_from=:?data_from and a.account_date >= :?account_date_start and a.account_date <= :?account_date_end and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction",
  "financeLoanConfirmInvoke":"call p_finance_loan(:!loan_code);",
  "financeRepaymentConfirmInvoke":"call p_finance_repayment(:!repayment_code); ",
  "financeServiceConfirmInvoke":"call p_finance_service_settlement(:!settlement_code); ",
  "financeLoanUpdate":"update t_finance_loan set loan_status = :?loan_status, rx_updateTime = now() where 1=1 and loan_code =:?loan_code;",
  "financeRepaymentUpdate":"update t_finance_repayment set repayment_status = :?repayment_status, repayment_voucher_url = :?repayment_voucher_url,real_gathering_name=:?real_gathering_name,real_gathering_bank=:?real_gathering_bank,real_gathering_card_no=:?real_gathering_card_no, repayment_name = :?repayment_name,repayment_bank = :?repayment_bank, repayment_card_no = :?repayment_card_no, rx_updateTime = now() where 1=1 and repayment_code =:?repayment_code;",
  "financeServiceUpdate":"update t_finance_service_settlement set settlement_status = :?settlement_status, repayment_voucher_url = :?repayment_voucher_url,real_gathering_name=:?real_gathering_name,real_gathering_bank=:?real_gathering_bank,real_gathering_card_no=:?real_gathering_card_no, repayment_name = :?repayment_name,repayment_bank = :?repayment_bank, repayment_card_no = :?repayment_card_no, rx_updateTime = now() where 1=1 and settlement_code =:?settlement_code;",
  "financeRepayment": "select a.repayment_code, a.fund_org_code, a.asset_org_code, a.edi_user_id, a.repayment_status, a.partner_name, DATE_FORMAT(a.repayment_from_date, '%Y-%m-%d') as repayment_from_date, DATE_FORMAT(a.repayment_closing_date, '%Y-%m-%d') as repayment_closing_date, format(a.repayment_principal_fee/100,2) as repayment_principal_fee, format(a.repayment_interest_fee/100,2) as repayment_interest_fee, format(a.repayment_total_fee/100,2) as repayment_total_fee, a.repayment_file_url, a.repayment_voucher_url,a.real_gathering_name,a.real_gathering_bank, a.real_gathering_card_no, a.repayment_name, a.repayment_bank, a.repayment_card_no,c.gathering_name as real_name, c.gathering_bank as real_bank, c.gathering_card_no as real_card_no, b.gathering_name as real_repayment_name, b.gathering_bank as real_repayment_bank, b.gathering_card_no as real_repayment_card_no, remark  from t_finance_repayment a left join t_asset_account b on a.asset_org_code=b.asset_org_code and a.fund_org_code=b.fund_org_code and b.account_purpose='001' left join t_fund_account c on a.asset_org_code=c.asset_org_code and a.fund_org_code=c.fund_org_code and c.account_purpose='002' where 1=1 and a.repayment_code=:?repayment_code and a.fund_org_code=:?fund_org_code and a.asset_org_code=:?asset_org_code and a.partner_name like :?partner_name and a.repayment_status=:?repayment_status  and a.repayment_from_date >= :?repayment_date_start and a.repayment_closing_date <= :?repayment_date_end and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction order by a.repayment_code desc limit :?page_index,10",
  "financeRepaymentCount": "select count(*) as total from t_finance_repayment where 1=1 and repayment_code=:?repayment_code and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and partner_name like :?partner_name and repayment_status=:?repayment_status and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by repayment_code desc",
  "financeService": "select a.settlement_code, a.fund_org_code, a.asset_org_code, a.edi_user_id, a.settlement_status, a.settlement_mode, DATE_FORMAT(a.settlement_month, '%Y-%m') as settlement_month, format(a.settlement_service_fee/100,2) as settlement_service_fee, a.settlement_file_url, a.repayment_voucher_url,a.real_gathering_name,a.real_gathering_bank, a.real_gathering_card_no, a.repayment_card_no, a.repayment_bank, a.repayment_name,c.gathering_name as real_name, c.gathering_bank as real_bank, c.gathering_card_no as real_card_no, b.gathering_name as real_repayment_name, b.gathering_bank as real_repayment_bank, b.gathering_card_no as real_repayment_card_no,  a.remark from t_finance_service_settlement a left join t_asset_account b on a.asset_org_code=b.asset_org_code and a.fund_org_code=b.fund_org_code and b.account_purpose='001' left join t_fund_account c on a.asset_org_code=c.asset_org_code and a.fund_org_code=c.fund_org_code and c.account_purpose='003' where 1=1 and a.settlement_code=:?settlement_code and a.fund_org_code=:?fund_org_code and a.asset_org_code=:?asset_org_code and a.settlement_status=:?settlement_status and a.settlement_mode=:?settlement_mode and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction <and DATE_FORMAT(a.settlement_month, '%Y') =:!year> <and DATE_FORMAT(a.settlement_month, '%m') =:!month> order by a.settlement_code desc limit :?page_index,10",
  "financeServiceCount": "select count(*) as total from t_finance_service_settlement where 1=1 and settlement_code=:?settlement_code and fund_org_code=:?fund_org_code and asset_org_code=:?asset_org_code and settlement_status=:?settlement_status and settlement_mode=:?settlement_mode and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction <and DATE_FORMAT(settlement_month, '%Y') =:!year> <and DATE_FORMAT(settlement_month, '%m') =:!month> order by settlement_code desc",
  "systemRoleQuery": "select * from t_role where 1=1 and role_type=:?role_type and sys_yn='Y'",
  "settleMethodSearch":"select  a.asset_org_code, a.fund_org_code, b.user_full_name as fund_user_full_name, b.user_from as fund_user_from, c.user_full_name as asset_user_full_name, c.user_from as asset_user_from, total_rate, interest_mode, service_mode, due_diligence_url, cooperative_agreements_url, guarantee_url, borrow_agreements_url, other_agreements_url from t_asset_fund as a inner join t_user as b on a.fund_org_code = b.org_code inner join t_user as c on a.asset_org_code = c.org_code where 1=1 and a.fund_org_code = :?fund_org_code and a.asset_org_code = :?asset_org_code and a.asset_org_code in ::?asset_data_restriction and a.fund_org_code in ::?fund_data_restriction;",
  "settleMethodUpdate":"update t_asset_fund set total_rate = :?total_rate, interest_mode = :?interest_mode, service_mode = :?service_mode, due_diligence_url = :?due_diligence_url, cooperative_agreements_url = :?cooperative_agreements_url, guarantee_url = :?guarantee_url, borrow_agreements_url = :?borrow_agreements_url, other_agreements_url = :?other_agreements_url, rx_updateTime = now() where 1=1 and fund_org_code =:?fund_org_code and asset_org_code = :?asset_org_code;",
  "balanceAssetStatisticsMonth": "SELECT asset_org_code, fund_org_code, statistics_month, Round(loan_fee/100,2) as loan_fee, Round(repayment_fee/100,2) as repayment_fee FROM t_finance_asset_month_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_month >= :?start_date and statistics_month <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_month desc, loan_fee desc, repayment_fee desc",
  "balanceFundStatisticsMonth": "SELECT asset_org_code, fund_org_code, statistics_month, Round(loan_fee/100,2) as loan_fee, Round(repayment_fee/100,2) as repayment_fee FROM t_finance_fund_month_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_month >= :?start_date and statistics_month <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_month desc, loan_fee desc, repayment_fee desc",
  "balanceAssetStatisticsDay": "SELECT asset_org_code, fund_org_code, statistics_date, Round(loan_fee/100,2) as loan_fee, Round(repayment_fee/100,2) as repayment_fee FROM t_finance_asset_day_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_date desc, loan_fee desc, repayment_fee desc",
  "balanceFundStatisticsDay": "SELECT asset_org_code, fund_org_code, statistics_date, Round(loan_fee/100,2) as loan_fee, Round(repayment_fee/100,2) as repayment_fee FROM t_finance_fund_day_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_date desc, loan_fee desc, repayment_fee desc",
  "balanceFundStatisticsBalance": "SELECT asset_org_code, fund_org_code, statistics_date, Round(balance_fee/100,2) as balance_fee FROM t_finance_fund_day_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_date desc, balance_fee desc",
  "balanceAssetStatisticsBalance": "SELECT asset_org_code, fund_org_code, statistics_date, Round(balance_fee/100,2) as balance_fee FROM t_finance_asset_day_statistics where 1 = 1 and asset_org_code = :?asset_org_code and fund_org_code = :?fund_org_code and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction order by statistics_date desc, balance_fee desc",
  "balanceFundStatisticsMonthAdmin": "SELECT fund_org_code, statistics_month, Round( sum(loan_fee) / 100, 2 ) AS loan_fee, Round( sum(repayment_fee) / 100, 2 ) AS repayment_fee FROM t_finance_fund_month_statistics WHERE 1 = 1 and statistics_month >= :?start_date and statistics_month <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_month, fund_org_code ORDER BY statistics_month desc, loan_fee desc, repayment_fee desc",
  "balanceAssetStatisticsMonthAdmin": "SELECT asset_org_code, statistics_month, Round( sum(loan_fee) / 100, 2 ) AS loan_fee, Round( sum(repayment_fee) / 100, 2 ) AS repayment_fee FROM t_finance_asset_month_statistics WHERE 1 = 1 and statistics_month >= :?start_date and statistics_month <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_month, asset_org_code ORDER BY statistics_month desc, loan_fee desc, repayment_fee desc",
  "balanceFundStatisticsDayAdmin": "SELECT fund_org_code, statistics_date, Round( sum(loan_fee) / 100, 2 ) AS loan_fee, Round( sum(repayment_fee) / 100, 2 ) AS repayment_fee FROM t_finance_fund_day_statistics WHERE 1 = 1 and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_date, fund_org_code ORDER BY statistics_date desc, loan_fee desc, repayment_fee desc",
  "balanceAssetStatisticsDayAdmin": "SELECT asset_org_code, statistics_date, Round( sum(loan_fee) / 100, 2 ) AS loan_fee, Round( sum(repayment_fee) / 100, 2 ) AS repayment_fee FROM t_finance_asset_day_statistics WHERE 1 = 1 and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_date, asset_org_code ORDER BY statistics_date desc, loan_fee desc, repayment_fee desc",
  "balanceFundStatisticsBalanceAdmin": "SELECT fund_org_code, statistics_date, Round(sum(balance_fee)/100,2) as balance_fee FROM t_finance_fund_day_statistics where 1 = 1 and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_date, fund_org_code  order by statistics_date desc, balance_fee desc",
  "balanceAssetStatisticsBalanceAdmin": "SELECT asset_org_code, statistics_date, Round(sum(balance_fee)/100,2) as balance_fee FROM t_finance_asset_day_statistics where 1 = 1 and statistics_date >= :?start_date and statistics_date <= :?end_date and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction GROUP BY statistics_date, asset_org_code  order by statistics_date desc, balance_fee desc",
  "balanceStatisticsTab4":"SELECT a.asset_org_code,b.fund_org_code,Round(ifnull(c.balance_fee,0)/100,2) AS balance_fee FROM ( SELECT org_code AS asset_org_code FROM t_user WHERE user_type IN (1,5) __ASSETLIST__) AS a INNER JOIN ( SELECT org_code AS fund_org_code FROM t_user WHERE user_type IN (2,6) __FUNDLIST__) AS b ON 1=1 LEFT JOIN t_finance_asset_day_statistics AS c ON c.asset_org_code=a.asset_org_code AND c.fund_org_code=b.fund_org_code AND c.statistics_date=date_format(date_add(now(),INTERVAL-1 DAY),'%Y-%m-%d') and c.asset_org_code in ::?asset_data_restriction and c.fund_org_code in ::?fund_data_restriction ORDER BY c.balance_fee desc, a.asset_org_code,b.fund_org_code",
  "getOrgMode": "SELECT *  from t_org_mode where 1=1 and org_code=:?org_code and mode_type=:?mode_type",
  "deleteOrgMode": "delete  from t_org_mode where 1=1 and org_code=:?org_code and mode_type=:?mode_type",
  "insertOrgMode": "insert into t_org_mode set mode_content=:?mode_content, org_code=:?org_code, mode_type=:?mode_type, rx_insertTime=now(), rx_updateTime=now()",
  "updateOrgMode": "update t_org_mode set mode_content=:?mode_content, rx_updateTime=now() where 1=1 and org_code=:?org_code and mode_type=:?mode_type",
  "repaymentPlanFund": "SELECT asset_org_code,repayment_date, Round((sum(principal_fee)+sum(interest_fee))/100,2) as all_fee, Round(sum(principal_fee)/100,2) as principal_fee, Round(sum(interest_fee)/100,2) as interest_fee , Round(sum(service_fee)/100,2) as service_fee FROM t_finance_fund_repayment_plan WHERE 1 = 1 and repayment_date >= now() and repayment_date <= date_add(now(), interval 30 day) and fund_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction group by repayment_date,asset_org_code order by repayment_date, all_fee desc, principal_fee desc, interest_fee desc, service_fee desc",
  "repaymentPlanAsset": "SELECT fund_org_code,repayment_date, Round((sum(principal_fee)+sum(interest_fee))/100,2) as all_fee, Round(sum(principal_fee)/100,2) as principal_fee, Round(sum(interest_fee)/100,2) as interest_fee , Round(sum(service_fee)/100,2) as service_fee FROM t_finance_asset_repayment_plan WHERE 1 = 1 and repayment_date >= now() and repayment_date <= date_add(now(), interval 30 day) and asset_org_code=:?org_code and asset_org_code in ::?asset_data_restriction and fund_org_code in ::?fund_data_restriction group by repayment_date,fund_org_code order by repayment_date , all_fee desc, principal_fee desc, interest_fee desc, service_fee desc",
  "getAssetAccount": "SELECT a.*, b.user_name fund_user_name, b.user_full_name fund_user_full_name from t_asset_account a left join t_user b on b.org_code=a.fund_org_code where 1=1 and a.account_purpose=:?account_purpose and a.asset_org_code=:?asset_org_code and a.fund_org_code=:?fund_org_code",
  "getFundAccount": "SELECT a.*, b.user_name asset_user_name, b.user_full_name asset_user_full_name from t_fund_account a left join t_user b on b.org_code=a.asset_org_code where 1=1 and account_purpose=:?account_purpose and asset_org_code=:?asset_org_code and fund_org_code=:?fund_org_code",
  "operLogModalCount": "select count(*) as total from t_oper_log where 1=1  and from_table = :?from_table and from_table_key = :?from_table_key",
  "operLogModalQuery": "select ifnull(c.user_name,b.user_name) as user_name,oper_log,DATE_FORMAT(oper_time,'%Y-%m-%d %H:%i:%S') as oper_time from t_oper_log a left join t_user as b on a.create_user_id=b.user_id left join t_user as c on a.sub_user_id=c.user_id where 1=1 and from_table = :?from_table and from_table_key = :?from_table_key order by oper_time desc limit :?page_index,10",
  "publicityEnterpriseSearch": "SELECT org_code, task_name, task_status, format(total_count,0) as total_count, format(finish_count,0) as finish_count,  format(fail_count,0) as fail_count, DATE_FORMAT( task_createtime, '%Y-%m-%d %H:%i:%S' ) AS task_createtime, down_url FROM t_task_enterprise_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction ORDER BY task_createtime DESC limit :?page_index,10",
  "publicityEnterpriseSearchCount": "SELECT count(*) as total, format(sum(total_count),0) as total_count, format(sum(finish_count),0) as finish_count,  format(sum(fail_count),0) as fail_count FROM t_task_enterprise_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction",
  "publicityPersonalSearch": "SELECT org_code, task_name, task_status, format(total_count,0) as total_count, format(finish_count,0) as finish_count,  format(fail_count,0) as fail_count, DATE_FORMAT( task_createtime, '%Y-%m-%d %H:%i:%S' ) AS task_createtime, down_url FROM t_task_person_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction ORDER BY task_createtime DESC limit :?page_index,10",
  "publicityPersonalSearchCount": "SELECT count(*) as total, format(sum(total_count),0) as total_count, format(sum(finish_count),0) as finish_count,  format(sum(fail_count),0) as fail_count FROM t_task_person_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction",
  "publicityEnterpriseSearchWithoutPagination": "SELECT org_code, task_name, task_status, format(total_count,0) as total_count, format(finish_count,0) as finish_count,  format(fail_count,0) as fail_count, DATE_FORMAT( task_createtime, '%Y-%m-%d %H:%i:%S' ) AS task_createtime, down_url FROM t_task_enterprise_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction ORDER BY task_createtime DESC",
  "publicityPersonalSearchWithoutPagination": "SELECT org_code, task_name, task_status, format(total_count,0) as total_count, format(finish_count,0) as finish_count,  format(fail_count,0) as fail_count, DATE_FORMAT( task_createtime, '%Y-%m-%d %H:%i:%S' ) AS task_createtime, down_url FROM t_task_person_pi_craw where 1 = 1 and org_code like :?org_code and task_createtime >= :?start_date and task_createtime <= :?end_date and task_name like :?task_name and org_code in ::?restriction ORDER BY task_createtime DESC",

  "countPublicityTasks": "select count(*) as total from t_task_enterprise_pi_craw where 1=1 and task_name = :?task_name and org_code = :?org_code",
  "countPersonalPublicityTasks": "select count(*) as total from t_task_person_pi_craw where 1=1 and task_name = :?task_name and org_code = :?org_code and org_code = :?org_code",
  "createPublicityTask": "insert into t_task_enterprise_pi_craw set rx_insertTime=now(), rx_updateTime=now(), task_createtime=now(), org_code=:?org_code, task_name=:?task_name, task_status=:?task_status, total_count=:?total_count",
  "createPersonalPublicityTask": "insert into t_task_person_pi_craw set rx_insertTime=now(), rx_updateTime=now(), task_createtime=now(), org_code=:?org_code, task_name=:?task_name, task_status=:?task_status, total_count=:?total_count",
  "updatePublicityTaskStatus": "update t_task_enterprise_pi_craw set rx_updateTime=now(), task_status=:?task_status where 1=1 and org_code=:?org_code and task_name=:?task_name",
  "updatePersonalPublicityTaskStatus": "update t_task_person_pi_craw set rx_updateTime=now(), task_status=:?task_status where 1=1 and org_code=:?org_code and task_name=:?task_name",
  "createPublicityTaskDetail": "insert into t_task_enterprise_pi_craw_detail set rx_insertTime=now(), org_code=:?org_code, task_name=:?task_name, task_status=:?task_status, company_name=:?company_name, order_no=:?order_no, asset_order_no=:?asset_order_no, rx_updateTime=now()",
  "createPersonalPublicityTaskDetail": "insert into t_task_person_pi_craw_detail set rx_insertTime=now(), org_code=:?org_code, task_name=:?task_name, task_status=:?task_status, borrow_name = :?borrow_name, borrow_certificate_no = :?borrow_certificate_no, borrow_phone = :?borrow_phone, borrow_card_no = :?borrow_card_no , order_no=:?order_no, asset_order_no=:?asset_order_no, rx_updateTime=now()",
  "countPublicityTaskDetail": "select count(*) as total from t_task_enterprise_pi_craw_detail where 1=1 and org_code=:?org_code and task_name=:?task_name and task_status=:?task_status and company_name=:?company_name",
  "countPersonalPublicityTaskDetail": "select count(*) as total from t_task_person_pi_craw_detail where 1=1 and org_code=:?org_code and task_name=:?task_name and task_status=:?task_status and company_name=:?company_name",
  "countSimplePersonalPublicityTaskDetail": "select count(*) as total from t_task_person_pi_craw_detail where 1=1 and org_code=:?org_code and task_name=:?task_name and task_status=:?task_status and borrow_certificate_no=:?borrow_certificate_no and borrow_name=:?borrow_name and borrow_phone=:?borrow_phone and borrow_card_no=:?borrow_card_no",
  "updatePublicityTaskDetailStatus": "update t_task_enterprise_pi_craw_detail set task_status=:?task_status where 1=1 and org_code=:?org_code and task_name=:?task_name and company_name=:?company_name",
  "updatePersonalPublicityTaskDetailStatus": "update t_task_person_pi_craw_detail set task_status=:?task_status where 1=1 and org_code=:?org_code and task_name=:?task_name and borrow_name = :?borrow_name and borrow_certificate_no = :?borrow_certificate_no and borrow_phone = :?borrow_phone and borrow_card_no = :?borrow_card_no and order_no=:?order_no and asset_order_no=:?asset_order_no",
  "cooperatorApiAssetCreate": "INSERT INTO t_asset_api set asset_org_code=:?asset_org_code,api_type=:?api_type,api_url=:?api_url,api_token=:?api_token,create_user_id=:?create_user_id,rx_insertTime=now(),rx_updateTime=now()",
  "cooperatorApiAssetCount": "select count(*) as total from t_asset_api where 1=1  and asset_org_code = :?asset_org_code",
  "cooperatorApiAssetQuery": "select asset_org_code,api_type,api_url,api_token,DATE_FORMAT(rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_asset_api where 1=1 and asset_org_code = :?asset_org_code order by asset_org_code,api_type  limit :?page_index,10",
  "cooperatorApiAssetCheck": "select asset_org_code,api_type,api_url,api_token  from t_asset_api where 1=1 and asset_org_code = :?asset_org_code and api_type=:?api_type",
  "cooperatorApiAssetUpdate": "update t_asset_api set  api_url=:?api_url, api_token=:?api_token, rx_updateTime=now() where 1=1 and asset_org_code=:?asset_org_code and api_type=:?api_type",
  "cooperatorApiAssetDelete": "DELETE FROM t_asset_api where 1=1 and asset_org_code=:?asset_org_code and api_type=:?api_type",
  "cooperatorApiFundCreate": "INSERT INTO t_fund_api set fund_org_code=:?fund_org_code,api_type=:?api_type,api_url=:?api_url,api_token=:?api_token,create_user_id=:?create_user_id,rx_insertTime=now(),rx_updateTime=now()",
  "cooperatorApiFundCount": "select count(*) as total from t_fund_api where 1=1  and fund_org_code = :?fund_org_code",
  "cooperatorApiFundQuery": "select fund_org_code,api_type,api_url,api_token,DATE_FORMAT(rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_fund_api where 1=1 and fund_org_code = :?fund_org_code order by fund_org_code,api_type  limit :?page_index,10",
  "cooperatorApiFundCheck": "select fund_org_code,api_type,api_url,api_token from t_fund_api where 1=1 and fund_org_code = :?fund_org_code and api_type=:?api_type",
  "cooperatorApiFundUpdate": "update t_fund_api set  api_url=:?api_url, api_token=:?api_token, rx_updateTime=now() where 1=1 and fund_org_code=:?fund_org_code and api_type=:?api_type",
  "cooperatorApiFundDelete": "DELETE FROM t_fund_api where 1=1 and fund_org_code=:?fund_org_code and api_type=:?api_type",
  "checkUserInfoIntegrity": "select partner_nature from t_user_attribute where user_id=:?user_id and ifnull(partner_nature,'')!=''",

  "ediPayBillExport": "SELECT c.para_value as 合作方类型, b.user_name as 合作方名称, a.month as 账单月份, d.para_value as 费用缴纳方式, CONCAT(Round(a.platform_use_rate*100,3),'%') as 平台使用费率, Round(a.person_order_fee/100,0) as 本月平台个人订单金额（元）, Round(a.enterprise_order_fee/100,0) as 本月平台企业订单金额（元）, Round(a.order_reduce_fee/100,0) as 本月减免平台订单金额（元）, Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100,0) as 本月平台使用费（元）, Round(a.finish_pay_fee/100,0) as 本月缴费金额（元）, Round(a.last_balance_fee/100,0) as 上月账户余额（元）, Round((a.finish_pay_fee + a.last_balance_fee)/100,0) as 本月账户余额（元）, (Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100, 0) - Round((a.finish_pay_fee + a.last_balance_fee)/100, 0)) as 本月应付总额（元）, date_add(CONCAT(a.month,'-01'), interval 1 month) as 结算截止日 FROM t_edi_pay_bill AS a INNER JOIN t_user AS b ON a.org_code=b.org_code LEFT JOIN t_sys_para_info c on c.table_name='t_user' and c.col_name='user_type' and c.para_key=b.user_type LEFT JOIN t_sys_para_info d on d.table_name='t_edi_pay_bill' and d.col_name='platform_pay_mode' and d.para_key=a.platform_pay_mode where 1=1 and a.month like :?month and a.platform_pay_mode = :?platform_pay_mode and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction ORDER BY a.month DESC, b.user_type, b.org_code",
  "ediPayBillQueryByKey": "SELECT a.org_code, a.month, a.platform_pay_mode, Round(a.platform_use_rate*100,3) as platform_use_rate, Round(a.person_order_fee/100,0) as person_order_fee, Round(a.enterprise_order_fee/100,0) as enterprise_order_fee, Round(a.order_reduce_fee/100,0) as order_reduce_fee, Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100,0) as platform_use_fee, Round(a.finish_pay_fee/100,0) as finish_pay_fee, Round(a.last_balance_fee/100,0) as last_balance_fee, Round((a.finish_pay_fee + a.last_balance_fee)/100,0) as balance_fee, (Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100, 0) - Round((a.finish_pay_fee + a.last_balance_fee)/100, 0)) as need_pay_fee, a.comment, date_add(CONCAT(a.month,'-01'), interval 1 month) AS pay_deadline_date, a.rx_insertTime, a.rx_updateTime from t_edi_pay_bill a where 1=1 and a.org_code =:!org_code and a.month =:!month",
  "ediPayBillUpdate": "update t_edi_pay_bill set rx_updateTime=now(), order_reduce_fee=:?order_reduce_fee where 1=1 and org_code =:?org_code and month =:?month",
  "ediPayBillPayFeeUpdate": "update t_edi_pay_bill a, (select max(month) as max_month from t_edi_pay_bill where org_code =:?org_code) b set rx_updateTime=now(), a.finish_pay_fee=a.finish_pay_fee+ :?pay_fee where 1=1 and org_code =:?org_code and a.month = b.max_month",
  "ediPayBillReducePreMonth": "update t_edi_pay_bill set rx_updateTime=now(), last_balance_fee=last_balance_fee + (:?reduce_val *platform_use_rate) where 1=1 and org_code =:?org_code and month >:?month",
  "ediPayBillCount": "SELECT count(*) as total FROM t_edi_pay_bill AS a INNER JOIN t_user AS b ON a.org_code=b.org_code where 1=1 and a.month like :?month and a.platform_pay_mode = :?platform_pay_mode and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction",
  "ediPayBillStatistics": "SELECT Round(sum(a.person_order_fee+a.enterprise_order_fee)/100,0) as order_fee_total, Round(sum((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate)/100,0) as platform_use_fee_total, Round(sum(a.finish_pay_fee)/100,0) as finish_pay_fee_total FROM t_edi_pay_bill AS a INNER JOIN t_user AS b ON a.org_code=b.org_code where 1=1 and a.month like :?month and a.platform_pay_mode = :?platform_pay_mode and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction",
  "ediPayBillQuery": "SELECT b.user_type, b.user_name, a.org_code, a.month, a.platform_pay_mode, Round(a.platform_use_rate*100,3) as platform_use_rate, Round(a.person_order_fee/100,0) as person_order_fee, Round(a.enterprise_order_fee/100,0) as enterprise_order_fee, Round(a.order_reduce_fee/100,0) as order_reduce_fee, Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100,0) as platform_use_fee, Round(a.finish_pay_fee/100,0) as finish_pay_fee, Round(a.last_balance_fee/100,0) as last_balance_fee, Round((a.finish_pay_fee + a.last_balance_fee)/100,0) as balance_fee, (Round((a.person_order_fee+a.enterprise_order_fee-a.order_reduce_fee)*a.platform_use_rate/100, 0) - Round((a.finish_pay_fee + a.last_balance_fee)/100, 0)) as need_pay_fee, a.comment, date_add(CONCAT(a.month,'-01'), interval 1 month) AS pay_deadline_date, a.rx_insertTime, a.rx_updateTime FROM t_edi_pay_bill AS a INNER JOIN t_user AS b ON a.org_code=b.org_code where 1=1 and a.month like :?month and a.platform_pay_mode = :?platform_pay_mode and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction ORDER BY a.month DESC, b.user_type, b.org_code limit :?page_index,10",
  "ediPayEmailQueryByKey": "SELECT * from t_edi_pay_email where 1=1 and org_code =:?org_code and email =:?email order by rx_insertTime desc",
  "ediPayEmailAdd": "INSERT INTO t_edi_pay_email set org_code=:?org_code, email=:?email, rx_insertTime=now(), rx_updateTime=now()",
  "ediPayDetailCount": "SELECT count(*) as total FROM t_edi_pay_detail AS a INNER JOIN t_user AS b ON a.org_code=b.org_code where 1=1 and a.rx_insertTime >= :?create_time_start and a.rx_insertTime <= :?create_time_end and a.pay_date >= :?pay_date_start and a.pay_date <= :?pay_date_end and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction",
  "ediPayDetailQuery": "SELECT a.pay_no, DATE_FORMAT(a.rx_insertTime, '%Y-%m-%d %H:%i:%s') as create_time, DATE_FORMAT(a.pay_date, '%Y-%m-%d') as pay_date, b.user_type, b.user_name, Round(pay_fee/100,2) as pay_fee, a.comment FROM t_edi_pay_detail AS a INNER JOIN t_user AS b ON a.org_code=b.org_code where 1=1 and a.rx_insertTime >= :?create_time_start and a.rx_insertTime <= :?create_time_end and a.pay_date >= :?pay_date_start and a.pay_date <= :?pay_date_end and b.user_type = :?user_type and b.org_code = :?org_code and a.org_code in ::?restriction ORDER BY a.rx_insertTime DESC limit :?page_index,10",
  "ediPayDetailAdd": "INSERT INTO t_edi_pay_detail set pay_no=:?pay_no, org_code=:?org_code, pay_date=:?pay_date, pay_fee=:?pay_fee, comment=:?comment, rx_insertTime=now(), rx_updateTime=now()",
  "ediFeePatternCount": "SELECT count(*) as total FROM t_user AS a INNER JOIN t_user_attribute AS b ON a.user_id=b.user_id where 1=1 and a.user_type = :?user_type and a.org_code = :?org_code and (a.user_type='1' or a.user_type='2') and a.org_code in ::?restriction",
  "ediFeePatternQuery": "SELECT a.user_id, a.user_type, a.user_name, b.platform_pay_mode, Round(b.platform_use_rate*100,3) as platform_use_rate, Round(b.adjust_platform_use_rate*100,3) as adjust_platform_use_rate, b.adjust_effect_month, b.platform_pay_scope FROM t_user AS a INNER JOIN t_user_attribute AS b ON a.user_id=b.user_id where 1=1 and a.user_type = :?user_type and a.org_code = :?org_code and (a.user_type='1' or a.user_type='2') and a.org_code in ::?restriction ORDER BY a.user_type, a.org_code limit :?page_index,10",
  "userAttributeQueryForFeePattern": "SELECT user_id, platform_pay_mode, Round(platform_use_rate*100,3) as platform_use_rate, Round(adjust_platform_use_rate*100,3) as adjust_platform_use_rate, adjust_effect_month, platform_pay_scope from t_user_attribute where 1=1 and user_id=:?user_id",
  "userAttributeUpdateForFeePattern": "update t_user_attribute set rx_updateTime=now(), platform_pay_mode=:?platform_pay_mode, platform_use_rate=:?platform_use_rate, adjust_platform_use_rate=:!adjust_platform_use_rate, adjust_effect_month=:!adjust_effect_month, platform_pay_scope=:!platform_pay_scope where 1=1 and user_id=:?user_id",
  "userAttributeUpdateForFeePatternClearRateAndMonth": "update t_user_attribute set rx_updateTime=now(), platform_pay_mode=:?platform_pay_mode, platform_use_rate=:?platform_use_rate, adjust_platform_use_rate=NULL, adjust_effect_month=NULL, platform_pay_scope=:!platform_pay_scope where 1=1 and user_id=:?user_id",
  "UserAttributeDeadline": "select deadline_id,deadline_name FROM t_deadline where 1=1 order by deadline_id",
  "UserAttributeQuery": "select ifnull(org_code,'') as org_code,ifnull(partner_nature,'') as partner_nature,ifnull(is_debt_exchange,0) as is_debt_exchange,repayment_mode,ifnull(is_deadline_favor,0) as is_deadline_favor,product_deadline,supervise_bank,(select ifnull(api_url,'') from t_fund_api where fund_org_code=t_user_attribute.org_code and api_type='04') as api_url FROM t_user_attribute where 1=1 and user_id=:?user_id",
  "UserAttributeUpdate": "update t_user_attribute set partner_nature=:?partner_nature,is_debt_exchange=:?is_debt_exchange,repayment_mode=:?repayment_mode,is_deadline_favor=:?is_deadline_favor,product_deadline=:!product_deadline,supervise_bank=:!supervise_bank, org_code=:?org_code, rx_updateTime=now() where 1=1 and user_id=:?user_id",
  "UserAttributeDelete": "delete from t_user_attribute where 1=1 and user_id=:!user_id",
  "UserAttributeAdd": "insert into t_user_attribute(user_id, org_code,rx_insertTime,rx_updateTime) select a.user_id,a.org_code,now(),now() from t_user as a where not exists (select 1 from t_user_attribute as b where a.user_id = b.user_id)",
  "UserAttributeFundApiUrlCreate": "insert into t_fund_api set fund_org_code=:?fund_org_code,api_type='04',api_url=:?api_url,api_token=:?fund_org_code,rx_insertTime=now(), rx_updateTime=now()",
  "UserAttributeFundApiUrlUpdate": "update t_fund_api set api_url=:?api_url where 1=1 and fund_org_code=:?fund_org_code and api_type='04'",
  "UserAttributeFundApiUrlDelete": "delete from t_fund_api where api_type='04' and api_url=:?api_url and fund_org_code=:?fund_org_code",
  "UserAttributeFundApiUrlCheck": "select 1 from t_fund_api  where 1=1 and fund_org_code=:?fund_org_code and api_type='04'",
  "userAttributeManagement_Count": "select count(1) as total FROM t_user_attribute where 1=1 and org_code like :?org_code  and partner_nature = :?partner_nature and is_debt_exchange = :?is_debt_exchange and org_code in ::?restriction",
  "userAttributeManagement_Query": "select ifnull(org_code,'') as org_code,ifnull(partner_nature,'') as partner_nature, is_debt_exchange,repayment_mode,ifnull(is_deadline_favor,0) as is_deadline_favor,product_deadline,supervise_bank,(select ifnull(api_url,'') from t_fund_api where fund_org_code=t_user_attribute.org_code and api_type='04') as api_url FROM t_user_attribute where 1=1 and org_code like :?org_code and partner_nature = :?partner_nature and is_debt_exchange = :?is_debt_exchange and org_code in ::?restriction order by org_code,partner_nature limit :?page_index,10",

  "subUserRestrictionDelete": "DELETE FROM t_sub_user_data_func WHERE 1=1 and sub_user_id = :!sub_user_id",
  "subUserRestrictionAdd": "INSERT INTO t_sub_user_data_func set sub_user_id=:!sub_user_id, partner_org_code=:!partner_org_code, user_type=:!user_type, rx_insertTime=now(), rx_updateTime=now()",
  "subUserRestrictionQuery": "select * from t_sub_user_data_func where sub_user_id=:?sub_user_id and partner_org_code = :!partner_org_code and user_type=:!user_type",
  "subUserRoleManageQuery": "select role_id,role_name,role_type,sub_user_yn,sys_yn,remark,DATE_FORMAT(rx_insertTime,'%Y-%m-%d %H:%i:%S') as rx_insertTime from t_role where sub_user_yn = 'Y' and role_type= :?role_type order by sys_yn,rx_insertTime  limit :?page_index,10",
  "withdrawExport":"SELECT a.order_no AS 平台订单号,a.order_status AS 订单状态,b.withdraw_status AS 提现状态,DATE_FORMAT( b.withdraw_date, '%Y-%m-%d %H:%i:%s' ) AS 提现日期,DATE_FORMAT( b.finish_date, '%Y-%m-%d %H:%i:%s' ) AS 提现完成日期, DATE_FORMAT( t_order_payment.payment_date, '%Y-%m-%d' ) AS 到账日期,asset_user.user_name AS 资产方机构名,a.asset_org_code AS 资产方机构号,a.asset_order_no AS 资产方订单号,DATE_FORMAT(a.borrow_date,'%Y-%m-%d') AS 借款日期,DATE_FORMAT(a.rx_insertTime,'%Y-%m-%d %H:%i:%s') AS 创建时间,a.borrow_type AS 借款主体类型,a.borrow_name AS 借款人名称,a.borrow_certificate_type AS 借款人证件类型,a.borrow_certificate_no AS 借款人证件号,a.borrow_phone AS 借款人银行预留手机号,a.borrow_mail AS 借款人邮箱,a.borrow_bank AS 借款人开户行,a.borrow_card_type AS 借款人银行卡类型,a.borrow_card_no AS 借款人银行卡号,a.borrow_area AS 借款人所属地区,a.borrow_work_address AS 借款人工作地址,a.borrow_family_address AS 借款人家庭地址,a.borrow_census_address AS 借款人户籍地址,a.borrow_pay_mode AS 借款支付方式,a.borrow_purpose AS 借款用途,a.borrow_fee/100 AS 借款金额（元）,a.borrow_period AS 借款期限单位,a.borrow_deadline AS 借款期限,a.borrow_credit_fee/100 AS 借款人授信额度,a.borrow_credit_report AS 借款人征信报告情况,a.borrow_income_report AS 借款人收入情况,a.business_type AS 业务类型,a.gathering_name AS 收款账号名称,a.gathering_bank AS 收款账户开户行,a.gathering_card_no AS 收款账户号,fund_user.user_name AS 资金方机构名,a.fund_org_code AS 资金方机构号,a.fund_order_no AS 资金方订单号,a.refuse_type AS 拒绝类型,a.refuse_reason AS 拒绝原因,a.repayment_mode AS 还款方式,a.occupation AS 借款人职业,a.repayment_from AS 还款来源,IF (a.data_from='A','系统对接','手动创建') AS 数据来源,a.credit_org AS 授信机构,a.credit_score AS 授信评分 FROM t_order AS a INNER JOIN t_order_withdraw AS b ON a.order_no=b.order_no and 1=1 and b.withdraw_status in ::?withdraw_status INNER JOIN t_order_payment AS t_order_payment ON a.order_no=t_order_payment.order_no and 1=1 and t_order_payment.payment_date >= :?payment_start_date and t_order_payment.payment_date <= :?payment_end_date INNER JOIN t_fund_api AS c ON a.fund_org_code=c.fund_org_code and c.api_type='04' INNER JOIN t_user as asset_user ON a.asset_org_code = asset_user.org_code INNER JOIN t_user as fund_user ON a.fund_org_code = fund_user.org_code WHERE 1=1 and a.fund_org_code= :?fund_org_code and a.asset_org_code= :?asset_org_code and a.borrow_date>=:?borrow_start_date and a.borrow_date<= :?borrow_end_date and a.order_no= :?order_no and a.asset_order_no= :?asset_order_no and a.borrow_certificate_no like :?borrow_certificate_no and a.fund_org_code in ::?fund_restriction and a.asset_org_code in ::?asset_restriction ORDER BY t_order_payment.payment_date  DESC",
  "a": ""
}
